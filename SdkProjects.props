<Project>
  <!--
  These properties are only meant for projects using the newer SDK-based project style. Properties that are meant for
  all projects (both legacy .csproj and SDK-based .csproj) should be put in Directory.Build.props.
  -->

  <ItemGroup>
    <PackageReference Include="MicroBuild.Core">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- NuGet signing block: start -->
  <PropertyGroup>
    <SignPath>build</SignPath>
    <SignPath Condition="'$(BUILD_SOURCESDIRECTORY)' != ''">$(BUILD_SOURCESDIRECTORY)\build</SignPath>
    <SignPath Condition="'$(NuGetBuildPath)' != ''">$(NuGetBuildPath)</SignPath>
    <SignType Condition="'$(SignType)' == ''">none</SignType>
  </PropertyGroup>
  <Import Project="sign.thirdparty.props" />
  <Import Project="$(SignPath)\sign.targets" Condition="Exists('$(SignPath)\sign.targets')" />
  <Import Project="$(SignPath)\sign.microbuild.targets" Condition="Exists('$(SignPath)\sign.microbuild.targets')" />
  <!-- NuGet signing block: end -->

  <PropertyGroup>
    <!-- Enabled for SDK-based web projects. -->
    <UseNuGetBuildExtensions Condition="'$(UseNuGetBuildExtensions)' == '' And '$(UsingMicrosoftNETSdkWeb)' == 'true'">true</UseNuGetBuildExtensions>
    <!-- Enabled for EXE (console app) projects, which are jobs. -->
    <UseNuGetBuildExtensions Condition="'$(UseNuGetBuildExtensions)' == '' And '$(UsingMicrosoftNETSdk)' == 'true' And '$(OutputType)' == 'Exe'">true</UseNuGetBuildExtensions>
    <!-- Other projects can opt in by setting the UseNuGetBuildExtensions property to true. -->
  </PropertyGroup>
  <Import Project="$(NuGetBuildExtensions)" Condition="'$(UseNuGetBuildExtensions)' == 'true' And '$(NuGetBuildExtensions)' != '' And Exists('$(NuGetBuildExtensions)')" />

</Project>