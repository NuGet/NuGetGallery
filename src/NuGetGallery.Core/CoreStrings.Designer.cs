//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGetGallery {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CoreStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CoreStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGetGallery.CoreStrings", typeof(CoreStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument cannot be null or empty..
        /// </summary>
        public static string ArgumentCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate does not exist..
        /// </summary>
        public static string CertificateNotFound {
            get {
                return ResourceManager.GetString("CertificateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thumbprint is expected to be a SHA-256 thumbprint, which is exactly 64 characters in length.  Did the hash algorithm change?.
        /// </summary>
        public static string CertificateThumbprintHashAlgorithmChanged {
            get {
                return ResourceManager.GetString("CertificateThumbprintHashAlgorithmChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to write audit record: &apos;{0}&apos;. Record already exists..
        /// </summary>
        public static string CloudAuditingService_DuplicateAuditRecord {
            get {
                return ResourceManager.GetString("CloudAuditingService_DuplicateAuditRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No handler for the {0} command is registered..
        /// </summary>
        public static string CommandExecutor_UnhandledCommand {
            get {
                return ResourceManager.GetString("CommandExecutor_UnhandledCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cookie compliance service is already initialized..
        /// </summary>
        public static string CookieComplianceServiceAlreadyInitialized {
            get {
                return ResourceManager.GetString("CookieComplianceServiceAlreadyInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cookie compliance service is not initialized..
        /// </summary>
        public static string CookieComplianceServiceNotInitialized {
            get {
                return ResourceManager.GetString("CookieComplianceServiceNotInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (404) Error - Not Found.
        /// </summary>
        public static string Http404NotFound {
            get {
                return ResourceManager.GetString("Http404NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index does not exist.
        /// </summary>
        public static string IndexDoesNotExist {
            get {
                return ResourceManager.GetString("IndexDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains a duplicate dependency: {0} {1}.
        /// </summary>
        public static string Manifest_DuplicateDependency {
            get {
                return ResourceManager.GetString("Manifest_DuplicateDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains duplicate metadata elements: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_DuplicateMetadataElements {
            get {
                return ResourceManager.GetString("Manifest_DuplicateMetadataElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an ID that is too long. Package IDs can be no longer than 100 characters..
        /// </summary>
        public static string Manifest_IdTooLong {
            get {
                return ResourceManager.GetString("Manifest_IdTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid boolean value for metadata element: &apos;{0}&apos;. The value should be &apos;true&apos; or &apos;false&apos;..
        /// </summary>
        public static string Manifest_InvalidBooleanMetadata {
            get {
                return ResourceManager.GetString("Manifest_InvalidBooleanMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid Dependency: &apos;{0} {1}&apos;.
        /// </summary>
        public static string Manifest_InvalidDependency {
            get {
                return ResourceManager.GetString("Manifest_InvalidDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid Dependency Version: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidDependencyVersion {
            get {
                return ResourceManager.GetString("Manifest_InvalidDependencyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid ID: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidId {
            get {
                return ResourceManager.GetString("Manifest_InvalidId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains invalid metadata elements: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidMetadataElements {
            get {
                return ResourceManager.GetString("Manifest_InvalidMetadataElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid Minimum Client Version: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidMinClientVersion {
            get {
                return ResourceManager.GetString("Manifest_InvalidMinClientVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid Target Framework: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidTargetFramework {
            get {
                return ResourceManager.GetString("Manifest_InvalidTargetFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid URL.
        /// </summary>
        public static string Manifest_InvalidUrl {
            get {
                return ResourceManager.GetString("Manifest_InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest contains an invalid Version: &apos;{0}&apos;.
        /// </summary>
        public static string Manifest_InvalidVersion {
            get {
                return ResourceManager.GetString("Manifest_InvalidVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package manifest is missing the Id field.
        /// </summary>
        public static string Manifest_MissingId {
            get {
                return ResourceManager.GetString("Manifest_MissingId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target framework {0} is not supported..
        /// </summary>
        public static string Manifest_TargetFrameworkNotSupported {
            get {
                return ResourceManager.GetString("Manifest_TargetFrameworkNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Negative indexes are invalid..
        /// </summary>
        public static string NegativeIndexesAreInvalid {
            get {
                return ResourceManager.GetString("NegativeIndexesAreInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is missing required data..
        /// </summary>
        public static string PackageIsMissingRequiredData {
            get {
                return ResourceManager.GetString("PackageIsMissingRequiredData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version string is invalid..
        /// </summary>
        public static string PackageMetadata_SetPropertiesFromMetadata_VersionStringInvalid {
            get {
                return ResourceManager.GetString("PackageMetadata_SetPropertiesFromMetadata_VersionStringInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version string &apos;{0}&apos; is invalid..
        /// </summary>
        public static string PackageMetadata_VersionStringInvalid {
            get {
                return ResourceManager.GetString("PackageMetadata_VersionStringInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package does not exist..
        /// </summary>
        public static string PackageNotFound {
            get {
                return ResourceManager.GetString("PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a readable stream.
        /// </summary>
        public static string StreamMustBeReadable {
            get {
                return ResourceManager.GetString("StreamMustBeReadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a seekable stream.
        /// </summary>
        public static string StreamMustBeSeekable {
            get {
                return ResourceManager.GetString("StreamMustBeSeekable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a writeable stream.
        /// </summary>
        public static string StreamMustBeWriteable {
            get {
                return ResourceManager.GetString("StreamMustBeWriteable", resourceCulture);
            }
        }
    }
}
