@model TransformAccountViewModel
@{
    ViewBag.Title = "Transform Account";
    ViewBag.MdPageColumns = Constants.ColumnsFormMd;
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";

    var transformNote = "Note that administrators have full control over the organization, including the ability to add and remove other members.";
    var transformToolTip = "Please enter a username for the organization administrator. " + transformNote;
    var transformConfirmation = "You have added '{0}' as an administrator. " + transformNote;
}

<section role="main" class="container main-container page-transform-account">
    <div class="row">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">
            <h1 class="text-center">Transform Account</h1>
            <div class="text-center ms-font-xxl">
                <a href="@Url.User(CurrentUser)">@CurrentUser.Username</a>
            </div>

            @using (Html.BeginForm("Transform", "Users", FormMethod.Post, new { id = "transform"}))
            {
                @Html.AntiForgeryToken()

                <div class="row center-box">
                    <div class="form-box col-xs-9">
                        <div class="form-group">
                            @Html.Label("Organization")
                            <p>@CurrentUser.Username</p>
                        </div>

                        <div class="form-group">
                            @Html.Label("Email")
                            <p>@CurrentUser.EmailAddress</p>
                        </div>

                        <div class="form-group @Html.HasErrorFor(m => m.AdminUsername)">
                            @Html.ShowLabelFor(m => m.AdminUsername)
                            <a href="#" data-toggle="tooltip" title="@transformToolTip">
                                <i class="ms-Icon ms-Icon--Info" aria-hidden="true" style="vertical-align: -2px"></i>
                            </a>
                            @Html.ShowTextBoxFor(m => m.AdminUsername)
                            @Html.ShowValidationMessagesFor(m => m.AdminUsername)
                        </div>
                        <div class="form-group has-error">
                            @Html.ShowValidationMessagesForEmpty()
                        </div>
                    </div>
                    <aside class="logo-box col-xs-3">
                        <div class="logo">
                            @Html.Label("Logo")
                        </div>
                        <div>
                            @ViewHelpers.GravatarImage(CurrentUser.EmailAddress, CurrentUser.Username, Constants.GravatarImageSizeLarge, responsive: true)
                        </div>
                    </aside>
                </div>

                <div class="row form-group">
                    <div class="col-md-6">
                        <input type="submit" class="btn btn-primary form-control" value="Transform" />
                    </div>
                    <div class="col-md-6">
                        <a href="/" role="button" class="btn btn-default form-control" id="cancel-transform">
                            Cancel
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section bottomScripts {
    <script type="text/javascript">
        $(function ()
        {
           var confirmation = "@Html.Raw(transformConfirmation)";
            $("#transform").submit(function (event) {
                return window.nuget.confirmEvent(
                    window.nuget.formatString(confirmation, $("#AdminUsername").val()),
                    event);
            })
        });
    </script>
}