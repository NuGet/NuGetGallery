@model ManagePackagesViewModel
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Manage My Package";
    ViewBag.Tab = "Packages";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";

    var namespacesCount = Model.ReservedNamespaces.ReservedNamespaces.Count();
    var ownerRequestsReceivedCount = Model.OwnerRequests.Received.RequestItems.Count();
    var ownerRequestsSentCount = Model.OwnerRequests.Sent.RequestItems.Count();
}

<section role="main" class="container main-container page-manage-packages">
    <div class="row">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">
            
            <div class="clearfix">
                <h1 class="pull-left">Manage Packages</h1>
                <div class="text-center ms-font-xxl">
                    <span class="form-section-data">
                        <select id="ownerFilter" class="form-control pull-right hidden"
                                data-bind="options: Owners, value: OwnerFilter, optionsText: 'Username'"></select>
                    </span>
                </div>
            </div>

            @ViewHelpers.Section(this, "listed", @<text>Published Packages</text>,
                @<text>
                    <span id="listed-data" data-bind="text: ListedPackages.VisiblePackagesHeading()"></span>
                </text>,
                @<text>
                    <div class="row user-package-list">
                        <div data-bind="template: { name: 'manage-packages', data: ListedPackages }"></div>
                    </div>
                </text>, expanded: false)

            @ViewHelpers.Section(this, "unlisted", @<text>Unlisted Packages</text>,
                @<text>
                    <span id="unlisted-data" data-bind="text: UnlistedPackages.VisiblePackagesHeading()"></span>
                </text>,
                @<text>
                    <div class="row user-package-list">
                        <div data-bind="template: { name: 'manage-packages', data: UnlistedPackages }"></div>
                    </div>
                </text>, expanded: false)

            @if (namespacesCount > 0)
            {
                @ViewHelpers.Section(this, "namespaces",
                            @<text>Reserved Namespaces</text>,
                        @<text>@Html.Raw(namespacesCount + " namespace" + (namespacesCount == 1 ? "" : "s"))</text>,
                    @<text>
                        @Html.Partial("_ReservedNamespacesList", Model.ReservedNamespaces)
                    </text>, expanded: false)
            }

            @if (Model.OwnerRequests.Received.RequestItems.Any())
            {
                @ViewHelpers.Section(this, "requests-received",
                            @<text>Ownership Requests (Received)</text>,
                            @<text>@Html.Raw(ownerRequestsReceivedCount + " request" + (ownerRequestsReceivedCount == 1 ? "" : "s"))</text>,
                            @<text>
                                @Html.Partial("_OwnerRequestsList", Model.OwnerRequests.Received)
                            </text>, expanded: false)
            }

            @if (Model.OwnerRequests.Sent.RequestItems.Any())
            {
                @ViewHelpers.Section(this, "requests-sent",
                            @<text>Ownership Requests (Sent)</text>,
                            @<text>@Html.Raw(ownerRequestsSentCount + " request" + (ownerRequestsSentCount == 1 ? "" : "s"))</text>,
                            @<text>
                                @Html.Partial("_OwnerRequestsList", Model.OwnerRequests.Sent)
                            </text>, expanded: false)
            }
        </div>
</section>

<script type="text/html" id="manage-packages">
    <div class="col-md-12">
        <div class="panel-collapse collapse in" aria-expanded="true">
            <table class="table">
                <thead>
                    <tr class="manage-package-headings">
                        <th class="hidden-xs"></th>
                        <th>Package ID</th>
                        <th>Owners</th>
                        <th>Downloads</th>
                        <th>Latest Version</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach: Packages">
                    <tr class="manage-package-listing" data-bind="visible: Visible">
                        <td class="align-middle hidden-xs">
                            <img class="package-icon img-responsive" aria-hidden="true" alt=""
                                 data-bind="attr: { src: PackageIconUrl, onerror: PackageIconUrlFallback }" />
                        </td>
                        <td class="align-middle package-id">
                            <a title="View Package" data-bind="attr: { href: PackageUrl }">
                                <span data-bind="text: Id"></span>
                            </a>
                        </td>
                        <td class="align-middle">
                            <span class="ms-noWrap" data-bind="foreach: Owners">
                                <i class="ms-Icon ms-Icon--Group" aria-hidden="true" data-bind="visible: IsOrganization"></i>
                                <a data-bind="attr: { href: ProfileUrl }"><span data-bind="text: Username"></span></a><!-- ko if: ($index() < ($parent.Owners.length - 1)) -->,&nbsp;<!-- /ko -->
                            </span>
                        </td>
                        <td class="align-middle text-nowrap">
                            <span data-bind="text: FormattedDownloadCount"></span>
                        </td>
                        <td class="align-middle text-nowrap">
                            <span data-bind="text: LatestVersion"></span>
                        </td>
                        <td class="text-right align-middle package-controls">
                            <span data-bind="visible: CanEdit">
                                <a class="btn" title="Edit Package" data-bind="attr: { href: EditUrl,
                        'aria-label': 'Edit Package ' + Id + ' Version ' + LatestVersion }">

                                    <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>
                                </a>
                            </span>
                            <span data-bind="visible: CanManageOwners">
                                <a class="btn" title="Manage Owners" data-bind="attr: { href: ManageOwnersUrl,
                        'aria-label': 'Manage Owners for Package ' + Id }">

                                    <i class="ms-Icon ms-Icon--People" aria-hidden="true"></i>
                                </a>
                            </span>
                            <span data-bind="visible: CanDelete">
                                <a class="btn" title="Delete Package" data-bind="attr: { href: DeleteUrl,
                        'aria-label': 'Delete Package ' + Id + ' Version ' + LatestVersion }">

                                    <i class="ms-Icon ms-Icon--Delete" aria-hidden="true"></i>
                                </a>
                            </span>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</script>

@functions {
    private RouteUrlTemplate<User> userUrlTemplate;
    private RouteUrlTemplate<IPackageVersionModel> packageUrlTemplate;
    private RouteUrlTemplate<IPackageVersionModel> editUrlTemplate;
    private RouteUrlTemplate<IPackageVersionModel> manageOwnersUrlTemplate;
    private RouteUrlTemplate<IPackageVersionModel> deleteUrlTemplate;

    dynamic GetSerializablePackage(ListPackageItemViewModel p)
    {
        if (deleteUrlTemplate == null)
        {
            // Performance: RouteCollection.VirtualPath is expensive, so resolve the path once and save as a template.
            // Then substitute route values into the template path when rendering links for each package on the page.
            userUrlTemplate = Url.UserTemplate();
            packageUrlTemplate = Url.PackageRegistrationTemplate();
            editUrlTemplate = Url.EditPackageTemplate();
            manageOwnersUrlTemplate = Url.ManagePackageOwnersTemplate();
            deleteUrlTemplate = Url.DeletePackageTemplate();
        }

        return new
        {
            p.Id,
            Owners = p.Owners.Select(o => new
            {
                o.Username,
                ProfileUrl = userUrlTemplate.Resolve(o),
                IsOrganization = o is Organization
            }),
            p.TotalDownloadCount,
            LatestVersion = p.FullVersion.Abbreviate(25),
            PackageIconUrl = PackageHelper.ShouldRenderUrl(p.IconUrl) ? p.IconUrl : null,
            PackageUrl = packageUrlTemplate.Resolve(p),
            EditUrl = editUrlTemplate.Resolve(p),
            ManageOwnersUrl = manageOwnersUrlTemplate.Resolve(p),
            DeleteUrl = deleteUrlTemplate.Resolve(p),
            CanEdit = p.CanEdit,
            CanManageOwners = p.CanManageOwners,
            CanDelete = p.CanUnlistOrRelist
        };
    }
}

@section BottomScripts {
    <script type="text/javascript">
        var initialData = @Html.Raw(JsonConvert.SerializeObject(new
                     {
                         Owners = Model.Owners,
                         ListedPackages = Model.ListedPackages
                            .Select(p => GetSerializablePackage(p)),
                         UnlistedPackages = Model.UnlistedPackages
                            .Select(p => GetSerializablePackage(p)),
                         DefaultPackageIconUrl = Url.Absolute("~/Content/gallery/img/default-package-icon.svg"),
                         PackageIconUrlFallback = Url.Absolute("~/Content/gallery/img/default-package-icon-256x256.png")
                     }));
    </script>
    @ViewHelpers.SectionsScript(this)
    @Scripts.Render("~/Scripts/gallery/page-manage-packages.min.js")
}
