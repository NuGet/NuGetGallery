@model ApiKeysViewModel

@{
    ViewBag.Title = "API Keys";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
}

@helper Section(
    string id,
    string title,
    Func<MvcHtmlString, HelperResult> content)
{
    <h2>
        <a href="#" role="button" data-toggle="collapse" data-target="#@id-container"
           aria-expanded="true" aria-controls="@id-container" id="show-@id-container">
            <i class="ms-Icon ms-Icon--ChevronDown" aria-hidden="false"></i>
            <span>@title</span>
        </a>
    </h2>
    <div class="panel-collapse collapse in" id="@id-container">
        @content(MvcHtmlString.Empty)
    </div>
}

<section role="main" class="container main-container page-api-keys">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            <h1 class="text-center">API Keys</h1>
            <p>
                An API key is a token that can identify you to @(Config.Current.Brand). The
                <a href="https://docs.nuget.org/Consume/Command-Line-Reference">NuGet command-line utility</a> allows
                you to submit a NuGet package to the gallery using your API key to authenticate.
            </p>
            @if (!CurrentUser.Confirmed)
            {
                <p>To get an API Key you will need to <a href="@Url.ConfirmationRequired()">confirm your account.</a></p>
            }
            else
            {
                <p>
                    <strong>Always keep your API keys a secret!</strong> If one of your keys is accidentally revealed,
                    you can always generate a new one at any time. You can also remove existing API keys if necessary.
                </p>

                @Section(
                    "manage",
                    "Manage API Keys",
                    @<text>

                    </text>)

                @Section(
                    "example",
                    "Example Usage",
                    @<text>
                        <p>
                            The following snippet demonstrates how you can use the
                            <a href="https://docs.nuget.org/Consume/Command-Line-Reference">NuGet</a> command-line
                            utility to submit a NuGet package to the gallery:
                        </p>
                        <div class="example-commands">
                            nuget.exe setApiKey [your API key] -source @Model.SiteRoot
                            <br />
                            nuget.exe push MyPackage.1.0.nupkg -Source @Model.SiteRoot/api/v2/package
                        </div>
                    </text>)
            }
        </div>
    </div>
</section>

@section bottomScripts {
    <script type="text/javascript">
        $(function () {
            function configureSection(prefix) {
                window.nuget.configureExpanderHeading(prefix + "-container");
            }

            configureSection("manage");
            configureSection("example");
        });
    </script>
}
