﻿@using Newtonsoft.Json@model TrustedPublisherListViewModel
@using NuGetGallery.Authentication
@{
    ViewBag.Title = "Trusted Publishing";
    ViewBag.MdPageColumns = GalleryConstants.ColumnsFormMd;
}

<section role="main" class="container main-container page-page-trusted-publishing">
    @ViewHelpers.AjaxAntiForgeryToken(Html)
    <div class="row">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">            @ViewHelpers.BreadcrumbWithProfile(Url, CurrentUser, true, @<text>Trusted Publishing</text>)            <p>                <strong>Trusted Publishing</strong> lets you publish NuGet packages securely without managing API keys.                It currently supports publishing from <strong>GitHub Actions</strong>.                <a href="https://learn.microsoft.com/nuget/nuget-org/trusted-publishing"                   target="_blank" aria-label="Learn more about Trusted Publishing">Learn more</a>            </p>            @if (!CurrentUser.Confirmed)            {                @ViewHelpers.AlertWarning(                        @<text>                            To register a Trusted Publisher you will need to                            <a href="@Url.ConfirmationRequired()">confirm your account</a>.                        </text>)            }            else            {                <div data-bind="template: 'error-container'"></div>                @ViewHelpers.Section(this,                         "create",                         "Create",                        @<text>                            <div class="upsert-trusted-publisher">                                <div class="panel-body" data-bind="template: { name: 'upsert-trusted-publisher', data: NewTrustedPublisher }"></div>                            </div>                        </text>,              expanded: false,              expandedIcon: "Subtraction",              collapsedIcon: "Add")                @ViewHelpers.Section(this,                         "manage",                         "Manage",                        @<text>                            <div data-bind="template: 'manage-trusted-publishers'"></div>                        </text>)            }        </div>
    </div>
</section>

<script type="text/html" id="error-container" nonce="@Html.GetCSPNonce()">
    <!-- ko if: Error -->
    @ViewHelpers.AlertDanger(@<text>
        <span data-bind="html: Error"></span>
    </text>)
    <!-- /ko -->
</script>

<script type="text/html" id="manage-trusted-publishers" nonce="@Html.GetCSPNonce()">
    <div data-bind="template: { name: 'trusted-publisher-details', foreach: TrustedPublishers }">
    </div>
    <!-- ko if: TrustedPublishers().length === 0 -->
    @ViewHelpers.AlertInfo(
                @<text>You don't have any Trusted Publishers.</text>)
    <!-- /ko -->
</script>

<script type="text/html" id="trusted-publisher-details" nonce="@Html.GetCSPNonce()">    <div class="trusted-publisher-details">        <div class="row">            <div class="col-sm-1">                <img class="package-icon img-responsive" aria-hidden="true" alt="" data-bind="attr: { src: IconUrl, onerror: IconUrlFallback }" />            </div>            <div class="col-sm-11">                <!-- Common properties -->                <h3 data-bind="text: PolicyName" />                <br />                <b>Package owner:</b> <span data-bind="text: Owner" />                <ul class="package-list">                    <li>                        <b>Publisher:</b> <span data-bind="text: PublisherName" />                    </li>                    <!-- ko if: PublisherName() === 'GitHub' -->                    <li>                        <b>Repository Owner:</b> <span data-bind="text: gitHub.RepositoryOwner()" />                    </li>                    <li>                        <b>Repository:</b> <span data-bind="text: gitHub.Repository()" />;                        #<span data-bind="text: gitHub.RepositoryId()" />                        <a class="tooltip-target" href="javascript:void(0)" role="button">                            <i class="framework-filter-info-icon ms-Icon ms-Icon--Info"></i>                            <span class="tooltip-block" role="tooltip">                                <span class="tooltip-wrapper tooltip-with-icon popover right">                                    <span class="arrow"></span>                                    <span class="popover-content">                                        @NuGetGallery.Strings.GitHub_WhatIsRepositoryId                                    </span>                                </span>                            </span>                        </a>                    </li>                    <li>                        <b>Workflow:</b> <span data-bind="text: gitHub.WorkflowFile()" />                    </li>                    <!-- ko if: gitHub.Environment() -->                    <li>                        <b>Environment:</b> <span data-bind="text: gitHub.Environment()" />                    </li>                    <!-- /ko -->                    <!-- /ko -->                </ul>                <ul class="package-list" role="presentation">                    <li>                        <a class="icon-link" href="#" role="button" data-toggle="collapse"                           data-bind="attr: { 'data-target': '#' + EditContainerUid(),                                              'aria-controls': EditContainerUid,                                              id: StartEditUid },                                      click: function() { return false; }"                           aria-expanded="false">                            <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>                            <span>Edit</span>                        </a>                    </li>                    <li>                        <a class="icon-link" href="#" role="button" data-bind="click: Delete">                            <i class="ms-Icon ms-Icon--Delete" aria-hidden="true" />                            <span>Delete</span>                        </a>                    </li>                </ul>            </div>        </div>        <div class="upsert-trusted-publisher">            <div class="panel panel-default panel-collapse collapse"                 data-bind="attr: { id: EditContainerUid () },                            event: { 'show.bs.collapse': StopPropagation,                                     'hide.bs.collapse': StopPropagation }">                <div class="panel-body" data-bind="template: { name: 'upsert-trusted-publisher', data: $data }">                </div>            </div>        </div>    </div></script>

<script type="text/html" id="upsert-trusted-publisher" nonce="@Html.GetCSPNonce()">    <form class="upsert-form" data-bind="submit: CreateOrEdit, attr: { id: FormUid }">        <!-- ko ifnot: Key -->        <!-- Policy Name -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: PolicyNameUid,                                          id: PolicyNameUid() + '-label' }">Name</label>                <input type="text" class="form-control input-brand" data-bind="attr: { id: PolicyNameUid,                                          name: PolicyNameUid,                                          'aria-labelledby': PolicyNameUid() + '-label ' + PolicyNameUid() + '-validation-message' },                                  value: PendingPolicyName"                       data-val-required="Name is required."                       data-val-length-max="60"                       data-val-length="Name must not exceed 60 characters."
                       data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': PolicyNameUid,                                         id: PolicyNameUid() + '-validation-message' }"></span>                <span>Name of the Trusted Publisher policy</span>            </div>        </div>        <!-- Package Owner -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="required" data-bind="attr: { for: PackageOwnerUid,                                            id: PackageOwnerUid() + '-label' }">Package Owner</label>                <select class="form-control select-brand" aria-required="true" data-bind="attr: { id: PackageOwnerUid,                                                  name: PackageOwnerUid,                                                  'aria-labelledby': PackageOwnerUid() + '-label' },                                          options: PackageOwners, value: PackageOwner, optionsCaption: 'Select an owner...' "></select>                <div class="has-error-brand">                    <span class="field-validation-valid help-block" data-bind="text: PackageOwner() ?  '' : 'Package owner should be provided.'" aria-live="polite" role="alert"></span>                </div>            </div>        </div>        <!-- /ko -->        <!-- ko ifnot: Key -->        <!-- GitHub specific content -->        <div style="display: flex; align-items: center; gap: 10px;">            <h4><b>GitHub</b></h4>            <a href="https://learn.microsoft.com/nuget/nuget-org/trusted-publishing#github-actions"               target="_blank" aria-label="Learn more GitHubActions and Trusted Publishing">                Learn more            </a>        </div>        <br />        <!-- Repository Owner -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: gitHub.RepositoryOwnerUid(),                                          id: gitHub.RepositoryOwnerUid() + '-label' }">Repository Owner</label>                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.RepositoryOwnerUid(),                                          name: gitHub.RepositoryOwnerUid(),                                          'aria-labelledby': gitHub.RepositoryOwnerUid() + '-label ' + gitHub.RepositoryOwnerUid() + '-validation-message' },                                          value: gitHub.PendingRepositoryOwner" data-val-required="Repository owner is required." data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': gitHub.RepositoryOwnerUid(),                                         id: gitHub.RepositoryOwnerUid() + '-validation-message' }" />                <span>The GitHub organization or owner name. Example: <span class="example-text">azure</span></span>            </div>        </div>        <!-- Repository -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: gitHub.RepositoryUid(),                                          id: gitHub.RepositoryUid() + '-label' }">Repository</label>                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.RepositoryUid(),                                          name: gitHub.RepositoryUid(),                                          'aria-labelledby': gitHub.RepositoryUid() + '-label ' + gitHub.RepositoryUid() + '-validation-message' },                                          value: gitHub.PendingRepository" data-val-required="Repository is required." data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': gitHub.RepositoryUid(),                                         id: gitHub.RepositoryUid() + '-validation-message' }" />                <span>The GitHub repository name. Example: <span class="example-text">azure-sdk-tools</span></span>            </div>        </div>        <!-- GitHub repo validation -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required">Repository Validation</label>                <div class="row-checkbox-label">                    <label class="brand-radio">                        <input type="radio" data-bind="attr: { name: gitHub.ValidationMethodUid(),                                                              id: gitHub.ValidationMethodUid() + '-public' },                                                     checked: gitHub.PendingValidationMethod,                                                     value: 'public'">                        <span>Public or previously validated                            <br/>                            <small class="text-muted">                                The repository is public, or it has already been validated through a previously created trusted publishing policy. No further action needed.                            </small>                        </span>                    </label>                    <label class="brand-radio">                        <input type="radio" data-bind="attr: { name: gitHub.ValidationMethodUid(),                                                              id: gitHub.ValidationMethodUid() + '-publish' },                                                     checked: gitHub.PendingValidationMethod,                                                     value: 'first_use'">                        <span>I will use Trusted Publishing within 7 days                            <br />                            <small class="text-muted">                                Policy will be disabled if not validated in time.                                <a href="https://learn.microsoft.com/nuget/nuget-org/trusted-publishing#github-repository-validation" target="_blank" aria-label="Learn more about GitHub repository validation">Learn more</a>                            </small>                        </span>                    </label>                    <label class="brand-radio">                        <input type="radio" data-bind="attr: { name: gitHub.ValidationMethodUid(),                                                              id: gitHub.ValidationMethodUid() + '-manual' },                                                     checked: gitHub.PendingValidationMethod,                                                     value: 'manual'">                        <span>I will enter repository details manually                            <br />                            <small class="text-muted">                                <a href="https://learn.microsoft.com/nuget/nuget-org/trusted-publishing#github-repository-validation" target="_blank" aria-label="Learn more about GitHub repository validation">                                    Find out how to get the repository and owner IDs for your private GitHub repo.                                </a>                            </small>                        </span>                    </label>                </div>            </div>        </div>        <!-- Repository Owner ID - only visible when manual validation is selected -->        <!-- ko if: gitHub.PendingValidationMethod() === 'manual' -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: gitHub.RepositoryIdUid(),                                          id: gitHub.RepositoryIdUid() + '-label' }">Repository ID</label>                (<a class="tooltip-target" href="javascript:void(0)" role="button">where do I find it</a>)                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.RepositoryIdUid(),                                          name: gitHub.RepositoryIdUid(),                                          'aria-labelledby': gitHub.RepositoryIdUid() + '-label ' + gitHub.RepositoryIdUid() + '-validation-message' },                                          value: gitHub.PendingRepositoryId" data-val-required="Repository ID is required." data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': gitHub.RepositoryIdUid(),                                         id: gitHub.RepositoryIdUid() + '-validation-message' }" />                <span>The GitHub repository owner ID. Example: <span class="example-text">12345678</span></span>            </div>        </div>        <!-- /ko -->        <!-- Repository ID - only visible when manual validation is selected -->        <!-- ko if: gitHub.PendingValidationMethod() === 'manual' -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: gitHub.RepositoryOwnerIdUid(),                                          id: gitHub.RepositoryOwnerIdUid() + '-label' }">Repository Owner ID</label>                (<a class="tooltip-target" href="javascript:void(0)" role="button">where do I find it</a>)                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.RepositoryOwnerIdUid(),                                          name: gitHub.RepositoryOwnerIdUid(),                                          'aria-labelledby': gitHub.RepositoryOwnerIdUid() + '-label ' + gitHub.RepositoryOwnerIdUid() + '-validation-message' },                                          value: gitHub.PendingRepositoryOwnerId" data-val-required="Repository ID is required." data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': gitHub.RepositoryOwnerIdUid(),                                         id: gitHub.RepositoryOwnerIdUid() + '-validation-message' }" />                <span>The GitHub repository owner ID. Example: <span class="example-text">12345678</span></span>            </div>        </div>        <!-- /ko -->        <!-- /ko --> <!-- END OF "ko ifnot: Key" -->        <!-- Workflow File -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label required" data-bind="attr: { for: gitHub.WorkflowFileUid(),                                          id: gitHub.WorkflowFileUid() + '-label' }">Workflow File</label>                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.WorkflowFileUid(),                                          name: gitHub.WorkflowFileUid(),                                          'aria-labelledby': gitHub.WorkflowFileUid() + '-label ' + gitHub.WorkflowFileUid() + '-validation-message' },                                          value: gitHub.PendingWorkflowFile" data-val-required="Workflow file is required." data-val="true" />                <span class="field-validation-valid help-block" data-valmsg-replace="true" data-bind="attr: { 'data-valmsg-for': gitHub.WorkflowFileUid(),                                         id: gitHub.WorkflowFileUid() + '-validation-message' }" />                <span>                    The file name that contains publishing workflow and exists in the                    <span class="example-text">.github/workflows/</span> directory. Example:                    <span class="example-text">build.yml</span> or                    <span class="example-text">deploy/release.yaml</span>                </span>            </div>        </div>        <!-- Environment -->        <div class="row">            <div class="col-sm-7 form-group">                <label class="control-label" data-bind="attr: { for: gitHub.EnvironmentUid(),                                          id: gitHub.EnvironmentUid() + '-label' }">Environment</label>                <input type="text" class="form-control input-brand" data-bind="attr: { id: gitHub.EnvironmentUid(),                          name: gitHub.EnvironmentUid(),                          'aria-labelledby': gitHub.EnvironmentUid() + '-label' },                  value: gitHub.PendingEnvironment" />                <span>The GitHub Actions environment name, e.g. <span class="example-text">production</span></span>            </div>        </div>        <div class="row">            <div class="col-sm-6 form-group">                <input type="submit" class="btn btn-brand btn-block" data-bind="enable: !PendingCreateOrEdit(),                                  attr: { value: Key() ? 'Save' : 'Create' }" />            </div>            <div class="col-sm-6 form-group">                <button data-bind="attr: { 'data-target': '#' + EditContainerUid (),                                           'aria-controls': EditContainerUid (),                                           id: CancelEditUid },                                   enable: !PendingCreateOrEdit(),                                   click: CancelEdit" class="btn btn-brand-secondary btn-block">                    Cancel                </button>            </div>        </div>    </form>    <!-- ko text: AttachExtensions() -->    <!-- /ko --></script>

@section bottomScripts {
    <script type="text/javascript" nonce="@Html.GetCSPNonce()">
        var initialData = @Html.ToJson(new
                     {
                         TrustedPublishers = Model.TrustedPublishers,
                         PackageOwners = Model.PackageOwners,
                         GenerateUrl = Url.GenerateTrustedPublisherPolicy(),
                         EditUrl = Url.EditTrustedPublisherPolicy(),
                         RemoveUrl = Url.RemoveTrustedPublisherPolicy(),
                         ImageUrls = new {
                             TrustedPublisher = Url.Absolute("~/Content/gallery/img/trusted-publisher.svg"),
                             TrustedPublisherFallback = Url.Absolute("~/Content/gallery/img/trusted-publisher-256x256.png"),
                         }
                     });
    </script>
    @Scripts.RenderFormat("<script src=\"{0}\" nonce='" + @Html.GetCSPNonce().ToString() + "'></script>", "~/Scripts/gallery/page-trusted-publishing.min.js");
}
