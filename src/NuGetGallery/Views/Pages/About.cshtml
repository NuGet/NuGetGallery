@{
    ViewBag.Title = "About the Gallery";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
}

<script type="text/html" id="contributor-list-template">
    <!-- This is all on a single line because if there is space (new lines) between the <ul> and <li> elements, browsers render the space and it causes the formatting to be off. -->
    <ul class="contributors list-inline" data-bind="foreach: $data"><li class="contributor"><a data-bind="attr: { href: html_url }"><img class="avatar" data-bind="attr: { src: avatar_url, title: login }" /></a></li></ul>
</script>

<div class="container main-container page-about">
    <div class="row">
        <div class="col">
            <h1>About NuGet</h1>
            <p>
                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.

                Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
            </p>

            <h2>The NuGet Team</h2>
            <p>
                These are contributors from the NuGet team, including current and past team members.  The NuGet team works on the <a href="https://github.com/NuGet">NuGet Gallery</a>, and the <a href="https://github.com/NuGet/Home">NuGet Client tools</a> (Visual Studio Extension, nuget.exe, etc).
            </p>
            <div data-bind="template: { name: 'contributor-list-template', data: team }"></div>

            <h2>About the Gallery</h2>
            <p>
                The NuGet Gallery is <a href="http://opensource.org/">Open-Source Software</a> licensed under the
                <a href="https://github.com/NuGet/NuGetGallery/blob/master/LICENSE.txt">Apache 2 License</a>. This means
                you can take the code, modify it and redistribute it freely, as long as you adhere to the terms of the license.
            </p>
            <p>
                We also welcome contributions from the community. If you would like to contribute, check out our
                <a href="https://github.com/NuGet/NuGetGallery/blob/master/CONTRIBUTING.md">Contributors Guide</a> on
                our <a href="https://github.com/NuGet/NuGetGallery">GitHub Project Page</a>.
            </p>

            <h3>Special Thanks</h3>
            <p>
                A special thanks go out to some of our contributors who have made major contributions to the site.
            </p>
            <ul>
                <li>
                    <a href="https://github.com/NuGet/NuGetGallery/commits?author=robertmuehsig">Robert Muehsig</a> -
                    Lots of bug fixes, up-for-grabs features and various assorted goodies
                </li>
                <li>
                    <a href="https://github.com/NuGet/NuGetGallery/commits?author=zippy1981">Justin Dearing</a> -
                    Added the ability to send a copy of support emails to the originator.
                </li>
                <li>And <a href="https://github.com/NuGet/NuGetGallery/graphs/contributors">many many more!</a></li>
            </ul>
            <div data-bind="template: { name: 'contributor-list-template', data: contributors }"></div>
        </div>
    </div>
</div>

@section BottomScripts {
    <script>
        // This script downloads information about our team members and external contributors and displays them in an inline grid.
        // It relies on the existence of a static json file containing a list of team members.
        // This list is then compared with contributors to the gallery and client on GitHub.
        // Contributors who are listed as team members are displayed as team members.
        // Contributors who are not listed by the static json file are displayed as external contributors.
        // Note that if a team member has never contributed to the gallery or  client GitHub repositories, they will not be shown here, regardless of whether or not they are listed.
        
        $.getJSON(window.location.origin + '/api/v2/team', function (data) {
            // Fetch the static json file of team members.
            // Parse it into a map that contains whether or not the contributor is a team member.
            var teamMap = {};

            $.each(data, function (index, member) {
                if (!teamMap.hasOwnProperty(member)) {
                    teamMap[member] = 1;
                }
            });

            var repos = ["NuGetGallery", "NuGet.Client"];
            var repoPromises = [];

            // Get the list of contributors from each repository.
            $.each(repos, function (index, repo) {
                repoPromises.push(getContributors(repo));
            });

            Promise.all(repoPromises)
                .then(function (contributorsPerRepo) {
                    var team = [];
                    var contributors = [];

                    // If contributors are in this map, they have been added.
                    // Only display each contributor once.
                    var contributorMap = {};

                    $.each(contributorsPerRepo, function (index, repoContributors) {
                        $.each(repoContributors, function (index, repoContributor) {
                            var isTeam = teamMap.hasOwnProperty(repoContributor.login);

                            if (!contributorMap.hasOwnProperty(repoContributor.login)) {
                                if (isTeam) {
                                    team.push(repoContributor);
                                } else {
                                    contributors.push(repoContributor);
                                }
                                contributorMap[repoContributor.login] = 1;
                            }
                        });
                    });

                    // Sort so that contributors with the most contributions appear first.
                    team.sort(compareContributors);
                    contributors.sort(compareContributors);

                    ko.applyBindings({ team: team, contributors: contributors });
                });
        });

        // Fetches all of the contributors for a repo from GitHub.
        function getContributors(repo) {
            return getContributorsHelper(repo, 1, []);
        }

        function getContributorsHelper(repo, page, current) {
            // The list of contributors is paged so we must make multiple requests to get every contributor.
            return $.getJSON('https://api.github.com/repos/NuGet/' + repo + '/contributors?page=' + page)
                .then(function (repoContributors) {
                    return repoContributors.length > 0 ?
                        getContributorsHelper(repo, page + 1, current.concat(repoContributors)) :
                        Promise.resolve(current);
                });
        }
        
        function compareContributors(a, b) {
            return b.contributions - a.contributions;
        }
    </script>
}
