@using System.Linq.Expressions
@model VerifyPackageRequest
@{
    ViewBag.Title = "Upload";
    ViewBag.Tab = "Upload";
}

@Styles.Render("~/Content/font-awesome.css")
<h1 class="page-heading">Verify Details &amp; Submit</h1>

@ViewHelpers.UploadSequence(2)

<h2>Verify Details</h2>
<p class="long note">
    You have successfully uploaded a package. But you have not yet published it in the gallery. The package metadata 
    is shown below. Please verify the details and make any necessary changes. Then click submit.
</p>
<p class="long note">
    Note: The package ID, version, and license URL can only be changed by canceling and uploading a corrected package file.
</p>

@helper ReadOnlyField(string name, string formid, string value, bool link = false)
{
    <h4>@name</h4>
    if (String.IsNullOrEmpty(value))
    {
        <p><i>(none specified)</i></p>
    }
    else if (link)
    {
        <p><a href="@value">@value</a></p>
    }
    else
    {
        <p>@value</p>
    }
    <input type="hidden" name="@formid" value="@value" />
}

@helper EditableField(string name, Expression<Func<VerifyPackageRequest, object>> func, bool link = false)
{
    var formid = ExpressionHelper.GetExpressionText(func).Replace(".", "_");
    object temp = func.Compile().Invoke(Model);
    string value = temp == null ? null : temp.ToString();
    <h4>@name
        <button type="button" class="edit-button" id="@(formid + "Button")"><span class="icon-edit"></span></button>
        <button type="button" class="undo-button" id="@("Undo" + formid)" style="display: none"><span class="icon-undo"></span></button>
    </h4>
    <div style="position: relative">
        <div id="@(formid + "Text")">
            @if (String.IsNullOrEmpty(value))
            {
                <p><i>(none specified)</i></p>
            }
            else if (link)
            {
                <p><a href="@value">@value</a></p>
            }
            else
            {
                <p>@value</p>
            }
        </div>
        <div id="@(formid +"Field")" style="display: none; width: 100%">
            <div class="form-field" style="display: inline">
                @Html.EditorFor(func)
                @Html.ValidationMessageFor(func)
            </div>
        </div>
    </div>
}

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "VerifyForm" }))
{
    <fieldset class="form">
        <legend>Verify Package Details</legend>
    <ul id="packageDetails" style="border-bottom: 1px solid gray; margin-bottom: 1em;">
        <li>@ReadOnlyField("Package ID", "Id", Model.Id)</li>
        <li>@ReadOnlyField("Version", "Version", Model.Version)</li>
        <li>@ReadOnlyField("License URL", "LicenseUrl", Model.LicenseUrl, link: true)</li>

        <li>@EditableField("Title", m => m.Edit.VersionTitle)</li>
        <li>@EditableField("Description", m => m.Edit.Description)</li>
        <li>@EditableField("Summary", m => m.Edit.Summary)</li>
        <li>@EditableField("Icon URL", m => m.Edit.IconUrl, link: true)</li>
        <li>@EditableField("Project URL", m => m.Edit.ProjectUrl, link: true)</li>
        <li>@EditableField("Authors", m => m.Edit.Authors)</li>
        <li>@EditableField("Copyright", m => m.Edit.Copyright)</li>
        <li>@EditableField("Tags", m => m.Edit.Tags, link: true)</li>
        <li>@EditableField("Release Notes", m => m.Edit.ReleaseNotes)</li>
        <li>
            <h4>Requires License Acceptance
                @{
                    var formid2 = "Edit_RequiresLicenseAcceptance";
                    <button type="button" class="edit-button" id="@(formid2 + "Button")"><span class="icon-edit"></span></button>
                    <button type="button" class="undo-button" id="@("Undo" + formid2)" style="display: none"><span class="icon-undo"></span></button>
                }
            </h4>
            <div style="position: relative">
                <div id="Edit_RequiresLicenseAcceptanceText">
                    <p>@(Model.Edit.RequiresLicenseAcceptance ? "Yes" : "No")</p>
                </div>
                <div id="Edit_RequiresLicenseAcceptanceField" style="display: none; width: 100%">
                    <div class="form-field" style="display: inline">
                        @Html.DropDownList("Edit.RequiresLicenseAcceptance", 
                            new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Yes", Value = "true", Selected = Model.Edit.RequiresLicenseAcceptance },
                                new SelectListItem { Text = "No", Value = "false", Selected = !Model.Edit.RequiresLicenseAcceptance },
                            })
                        @Html.ValidationMessageFor(model => model.Edit.RequiresLicenseAcceptance)
                    </div>
                </div>
            </div>
        </li>
        <li>
            <h4>List This Package in Search Results</h4>
                <div class="form-field">
                   @Html.DropDownList("Listed", 
                            new List<SelectListItem>
                            {
                                new SelectListItem { Text = "Yes", Value = "true", Selected = true },
                                new SelectListItem { Text = "No", Value = "false" },
                            })
                        @Html.ValidationMessageFor(model => model.Edit.RequiresLicenseAcceptance)
                    @*<label for="Listed" class="checkbox">
                        List this package in search results. 
                    </label>*@
                </div>
        </li>
    </ul>

    @Html.AntiForgeryToken()
    <input type="submit" value="Submit" title="Verify Details &amp; Submit" /> 
    <a class="cancel" href="@Url.CancelUpload()" title="Cancel the upload in progress.">Cancel</a>
</fieldset>
}

@section BottomScripts {
    <script>
        $(function() {
            $('a.cancel').click(function() {
                var $anchor = $(this);
                var $form = $anchor.parents('form');
                $form.attr('action', $anchor.attr('href'));
                $form.submit();
                return false;
            });
        });
        $(function () {
            var form = $('#VerifyForm').toArray()[0];
            $(".edit-button").click(function (event) {
                event.preventDefault();
            });

            function SetupInput(name) {
                $("#" + name + "Button").click(function (event) {
                    event.preventDefault();
                    $("#" + name + "Text").css("visibility", "hidden");
                    $("#" + name + "Text").css("position", "absolute");
                    $("#" + name + "Field").show();
                    $("#" + name + "Button").hide();
                    $("#Undo" + name).show();
                });

                $("input[id=" + name + "]").keyup(function (event) {
                    $(event.target).attr("data-edited", event.target.value != event.target.defaultValue);
                    $("#Undo" + name).show();
                });
                $("textarea[id=" + name + "]").keyup(function (event) {
                    $(event.target).attr("data-edited", event.target.value != event.target.defaultValue);
                    $("#Undo" + name).show();
                });

                $("#Undo" + name + "").click(function (event) {
                    event.preventDefault();
                    $(document.forms.VerifyForm.elements["" + name + ""]).each(function () {
                        this.value = this.defaultValue;
                        $(this).attr("data-edited", "false");
                    });
                    $(event.target).hide();
                    $("#" + name + "Text").css("position", "static");
                    $("#" + name + "Text").css("visibility", "inherit");
                    $("#" + name + "Field").hide();
                    $("#" + name + "Button").show();
                    $("#Undo" + name).hide();
                });
            }

            SetupInput('Edit_VersionTitle');
            SetupInput('Edit_Description');
            SetupInput('Edit_Summary');
            SetupInput('Edit_IconUrl');
            SetupInput('Edit_ProjectUrl');
            SetupInput('Edit_Authors');
            SetupInput('Edit_Copyright');
            SetupInput('Edit_Tags');
            SetupInput('Edit_ReleaseNotes');
            SetupInput('Edit_RequiresLicenseAcceptance');
        });
    </script>
}
