@using NuGet.Services.Licenses

@model DisplayLicenseViewModel
@{
    ViewBag.Title = "License of " + Model.Id + " " + Model.Version;
    ViewBag.Tab = "Licenses";
    ViewBag.MdPageColumns = GalleryConstants.ColumnsFormMd;
    ViewBag.BlockSearchEngineIndexing = true;
}

@* The following two helpers must be on a single line each so no extra whitespace is introduced in the expression when rendered. *@
@* Helpers themselves are needed not to introduce that extra whitespce, which happens if they are inlined. *@
@helper MakeLicenseLink(CompositeLicenseExpressionSegment segment)
{<a href="@LicenseExpressionRedirectUrlHelper.GetLicenseExpressionRedirectUrl(segment.Value)">@segment.Value</a>}
@helper MakeLicenseSpan(CompositeLicenseExpressionSegment segment)
{<span>@segment.Value</span>}

<section role="main" class="container main-container page-licenses">
    <div class="row">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">

            @if (Model.ShowDetailsAndLinks)
            {
                @Html.Partial(
                    "_PackageHeading",
                    new PackageHeadingModel(
                        Model.Id,
                        Model.Version,
                        "License Info"))

                <div class="package-title">
                    <h1>
                        @Html.BreakWord(Model.Id)
                        <small class="text-nowrap">@Model.FullVersion</small>
                    </h1>
                </div>

                if (!string.IsNullOrWhiteSpace(Model.LicenseExpression))
                {
                    <label>License expression</label>
                    <div>
                        @if (Model.LicenseExpressionSegments.AnySafe())
                        {
                            foreach (var segment in Model.LicenseExpressionSegments)
                            {
                                if (@ViewHelpers.IsLicenseOrException(segment))
                                {
                                    @MakeLicenseLink(segment);
                                }
                                else
                                {
                                    @MakeLicenseSpan(segment);
                                }
                            }
                        }
                    </div>
                }
                else if (Model.EmbeddedLicenseType != EmbeddedLicenseFileType.Absent)
                {
                    if (Model.Validating)
                    {
                        @ViewHelpers.AlertWarning(
                                    @<text>
                                        The license file will become available once package validation has completed successfully.
                                    </text>
)
                    }
                    else
                    {
                        <label>License file</label>
                        <div class="common-licenses">
                            @if (Model.LicenseFileContentsHtml != null)
                            {
                                if (Model.LicenseFileContentsHtml.ImageSourceDisallowed && Model.CanDisplayPrivateMetadata)
                                {
                                    @ViewHelpers.AlertImageSourceDisallowed();
                                }

                                if (Model.LicenseFileContentsHtml.ImagesRewritten && Model.CanDisplayPrivateMetadata)
                                {
                                    @ViewHelpers.AlertImagesRewritten();
                                }
                                @Html.Raw(Model.LicenseFileContentsHtml.Content)
                            }
                            else
                            {
                                <pre class="license-file-contents custom-license-container">@Model.LicenseFileContents</pre>
                            }
                        </div>
                    }
                }
                else if (Model.LicenseUrl != null)
                {
                    <label>License URL</label>
                    <div>
                        <a href="@Model.LicenseUrl">
                            @if (Model.LicenseNames.AnySafe())
                            {
                                @(string.Join(", ", Model.LicenseNames.Select(x => x + " License")))
                            }
                            else
                            {
                                @Model.LicenseUrl
                            }
                        </a>
                    </div>
                }
                else
                {
                    <div>
                        @ViewHelpers.AlertWarning(
                                    @<text>
                                        This package contains no license information.
                                    </text>)
                    </div>
                }
            }
            else
            {
                    @ViewHelpers.AlertDanger(
                            @<text>
                                This package's content is hidden as it violates our <a href="https://www.nuget.org/policies/terms" title="Terms of Use">Terms of Use</a>.
                            </text>)
            }
        </div>
    </div>
</section>