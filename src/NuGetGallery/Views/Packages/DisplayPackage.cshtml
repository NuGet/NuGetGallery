@model DisplayPackageViewModel

@{
    ViewBag.Title = Model.Title + " " + Model.Version;
    ViewBag.Tab = "Packages";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
    var absolutePackageUrl = Url.Absolute(Url.Package(Model.Id));
}
@section SocialMeta {
    @if (!String.IsNullOrWhiteSpace(ViewBag.FacebookAppID))
    {
        <meta property="fb:app_id" content="@ViewBag.FacebookAppID" />
    }

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@("@nuget")">

    <meta property="og:title" content="@Model.Title" />
    <meta property="og:type" content="nugetgallery:package" />
    <meta property="og:url" content="@absolutePackageUrl" />
    <meta property="og:description" content="@Model.Description" />
    <meta property="og:determiner" content="a" />
    <meta property="og:image" content="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.png"))" />
}
@section Meta {
    @if (!Model.Listed || Model.Deleted)
    {
        <meta name="robots" content="noindex">
    }
}

@helper CommandTab(string label, string id, bool active)
{
    <li role="presentation" class="@(active ? "active" : string.Empty)">
        <a href="#@id" aria-controls="@id" title="Switch to tab panel which contains package installation command for @label"
           role="tab" data-toggle="tab">
            @label
        </a>
    </li>
}

@helper CommandPanel(Func<MvcHtmlString, HelperResult> htmlContent, string id, bool active)
{
    <div role="tabpanel" class="tab-pane @(active ? "active" : string.Empty)" id="@id">
        <div>
            <span class="install-script">
                <span id="@id-text">@htmlContent(MvcHtmlString.Empty)</span>
            </span>
            <span class="copy-button">
                <button id="@id-button" class="btn btn-default btn-warning" type="button"
                        data-toggle="popover" data-placement="bottom" data-content="Copied.">
                    <span class="ms-Icon ms-Icon--Copy" aria-hidden="true"></span>
                </button>
            </span>
        </div>
    </div>
}

<section role="main" class="container main-container page-package-details">
    <div class="row">
        <aside class="col-sm-1">
            <h3>
                <img class="img-responsive"
                     aria-hidden="true" alt=""
                     @ViewHelpers.ImageFallback(Url.Absolute("~/Content/gallery/img/default-package-icon.svg"))
                     src="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.svg"))" />
            </h3>
        </aside>
        <article class="col-sm-8">
            <h1 title="@Model.Title">
                @Model.Title.Abbreviate(40)
                <small>@Model.FullVersion</small>
            </h1>

            @foreach (var line in Model.Description.ToStringSafe().Split('\n'))
            {
                <p>@line</p>
            }

            @if (Model.HasPendingMetadata)
            {
                using (Html.BeginForm(actionName: "UndoPendingEdits", controllerName: "Packages"))
                {
                    @Html.AntiForgeryToken()

                    @ViewHelpers.AlertInfo(
                        @<text>
                            An edit is pending for this package version. You are seeing the <em>edited</em> package description now.
                            These changes will be applied to the package file and become visible to everybody soon unless you
                            <input type="submit" value="undo pending edits" title="undo pending edits" style="display: inline; width: 200px; font-size: 1em;" />
                            first.
                        </text>
                    )
                }
            }

            @if (Model.IsLastEditFailed)
            {
                @ViewHelpers.AlertDanger(
                    @<text>
                        Your last edit to this package was not successfully applied.
                        You can <a href="@Url.EditPackage(Model.Id, Model.Version)">edit</a>
                        the package and submit the edit again to retry the edit.
                    </text>
                )
            }

            @if (Model.Prerelease)
            {
                @ViewHelpers.AlertInfo(
                    @<text>
                        This is a prerelease version of @(Model.Title.Abbreviate(65)).
                    </text>
                )
            }

            @if (Model.LatestStableVersionSemVer2 && Model.HasNewerPrerelease)
            {
                @ViewHelpers.AlertInfo(
                    @<text>
                        There is a newer prerelease version of this package available.
                        <br /> See the version list below for details.
                    </text>
                )
            }

            @if (Model.Listed && Model.IsIndexed.HasValue && !Model.IsIndexed.Value)
            {
                @ViewHelpers.AlertWarning(
                    @<text>
                        <strong>This package has not been indexed yet.</strong> It will appear in search results
                        and will be available for install/restore after indexing is completed.
                    </text>
                )
            }

            @if (Model.Deleted)
            {
                @ViewHelpers.AlertDanger(
                    @<text>
                        <strong>This package has been deleted from the gallery.</strong> It is no longer available
                        for install/restore.
                    </text>
                )
            }

            @if (Model.IsSemVer2)
            {
                @ViewHelpers.AlertWarning(
                    @<text>
                        This package is only available for download with Visual Studio 2017 (version 15.3) and above or with NuGet client 4.3.0 and above.
                        Reach out to support if you have more questions.
                    </text>
                )
            }

            @if (!Model.Listed && !Model.Deleted)
            {
                if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    @ViewHelpers.AlertWarning(
                        @<text>
                            This package is unlisted and hidden from package listings.
                            You can see the package because you are one of its owners. To list the package again,
                            <a href="@Url.DeletePackage(Model)">change its listing setting</a>.
                        </text>
                    )
                }
                else
                {
                    @ViewHelpers.AlertWarning(
                        @<text>
                            The owner has unlisted this package.
                            This could mean that the package is deprecated or shouldn't be used anymore.
                        </text>
                    )
                }
            }

            @if (!String.IsNullOrEmpty(Model.MinClientVersion))
            {
                <p>Requires NuGet @Model.MinClientVersion or higher.</p>
            }

            <div class="install-tabs">
                <ul class="nav nav-tabs" role="tablist">
                    @CommandTab("Package Manager", "package-manager", active: true)
                    @CommandTab(".NET CLI", "dotnet-cli", active: false)
                </ul>
                <div class="tab-content">
                    @CommandPanel(@<text>Install-Package @Model.Id -Version @Model.Version</text>, "package-manager", active: true)
                    @CommandPanel(@<text>dotnet add package @Model.Id --version @Model.Version</text>, "dotnet-cli", active: false)
                </div>
            </div>

            @if (!String.IsNullOrWhiteSpace(Model.ReleaseNotes))
            {
                <h2>Release Notes</h2>

                // Not actually using <pre/> because its better to have wrapping text
                <p>@Html.PreFormattedText(Model.ReleaseNotes)</p>
            }

            @if (Model.Dependencies.DependencySets == null)
            {
                if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <h2>Dependencies</h2>
                    <p>
                        An error occurred processing dependencies.
                        Your package can still be downloaded and installed, but dependencies cannot be shown.
                        Please @Html.ActionLink("Contact Support", actionName: "ReportMyPackage", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version }, htmlAttributes: null) if you have any questions.
                    </p>
                    <p>
                        <strong>Note: This message is only visible to you and any other package owners.</strong>
                    </p>
                }
            }
            else
            {
                if (Model.Dependencies.DependencySets.Any())
                {
                    <h2>
                        <a href="#" role="button" data-toggle="collapse" data-target=".dependency-groups"
                           aria-expanded="false" id="show-dependency-groups">
                            <i class="ms-Icon ms-Icon--ChevronRight" aria-hidden="true"></i>
                            <span>Dependencies</span>
                        </a>
                    </h2>
                    <ul class="dependency-groups list-unstyled panel-collapse collapse">
                        @foreach (var dependencySet in Model.Dependencies.DependencySets)
                        {
                            var dependencySetTitle = dependencySet.Key;
                            <li>
                                @if (!Model.Dependencies.OnlyHasAllFrameworks)
                                {
                                    <h4><span>@dependencySetTitle</span></h4>
                                }
                                <ul class="list-unstyled dependency-group">
                                    @foreach (var dependency in dependencySet.Value)
                                    {
                                        <li>
                                            @if (dependency == null)
                                            {
                                                @:No dependencies.
                                            }
                                            else
                                            {
                                                <a href="@Url.Package(dependency.Id)">@dependency.Id</a>
                                                <span>@dependency.VersionSpec</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <h2>Dependencies</h2>
                    <p>This package has no dependencies.</p>
                }
            }

            <h2>
                <a href="#" role="button" data-toggle="collapse" data-target=".version-history"
                   aria-expanded="true" id="show-version-history">
                    <i class="ms-Icon ms-Icon--ChevronDown" aria-hidden="true"></i>
                    <span>Version History</span>
                </a>
            </h2>
            <div class="version-history panel-collapse collapse in" aria-expanded="true">
                <table class="table borderless">
                    <thead>
                        <tr>
                            <th>Version</th>
                            <th>Downloads</th>
                            <th>Last updated</th>
                            @if ((Model.IsOwner(User) || User.IsAdministrator()))
                            {
                                <th>Listed</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @{var rowCount = 0;}
                        @foreach (var packageVersion in Model.PackageVersions)
                        {
                            if (!packageVersion.Deleted && (packageVersion.Listed || (Model.IsOwner(User) || User.IsAdministrator())))
                            {
                                rowCount++;
                                <tr class="@(rowCount >= 6 ? "hidden-version collapse" : "")">
                                    <td>
                                        @if (packageVersion.IsCurrent(Model))
                                        {
                                            <a href="@Url.Package(packageVersion)">
                                                @packageVersion.FullVersion
                                                @if (packageVersion.IsCurrent(Model))
                                                {
                                                    @:(current version)
                                                }
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Package(packageVersion)">
                                                @packageVersion.FullVersion
                                            </a>
                                        }
                                    </td>
                                    <td>
                                        @packageVersion.DownloadCount.ToNuGetNumberString()
                                    </td>
                                    <td>
                                        <span data-datetime="@packageVersion.LastUpdated.ToString("O")">@packageVersion.LastUpdated.ToNuGetLongDateString()</span>
                                    </td>
                                    @if ((Model.IsOwner(User) || User.IsAdministrator()))
                                    {
                                        <td>
                                            <a href="@Url.DeletePackage(packageVersion)">@(packageVersion.Listed ? "yes" : "no")</a>
                                        </td>
                                    }
                                </tr>
                            }
                            else if (packageVersion.Deleted)
                            {
                                rowCount++;
                                <tr class="deleted @(rowCount >= 6 ? "hidden-version collapse" : "")">
                                    <td class="version">
                                        <s>@packageVersion.FullVersion</s> (deleted)
                                    </td>
                                    <td>
                                        @packageVersion.DownloadCount
                                    </td>
                                    <td>
                                        <span data-datetime="@packageVersion.LastUpdated.ToString("O")">@packageVersion.LastUpdated.ToNuGetLongDateString()</span>
                                    </td>
                                    <td></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
                @if (rowCount > 5)
                {
                    <button type="button" data-toggle="collapse" class="btn btn-link btn-expander" data-target=".hidden-version"
                            aria-expanded="false" id="show-hidden-version">
                        <i class="ms-Icon ms-Icon--CalculatorAddition" aria-hidden="true"></i>
                        <span>Show more</span>
                    </button>
                }
            </div>
        </article>
        <aside class="col-sm-3 package-details-info">
            <h2>Info</h2>
            <ul class="list-unstyled ms-Icon-ul">
                <li>
                    <i class="ms-Icon ms-Icon--History" aria-hidden="true"></i>
                    last updated <span data-datetime="@Model.LastUpdated.ToString("O")">@Model.LastUpdated.ToNuGetShortDateString()</span>
                </li>
                @if (PackageHelper.ShouldRenderUrl(Model.ProjectUrl))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Globe" aria-hidden="true"></i>
                        <a href="@Model.ProjectUrl" data-track="outbound-project-url" title="Visit the project site to learn more about this package" rel="nofollow">
                            @if(Model.ProjectUrl.Length <= 28)
                            {
                                @Model.ProjectUrl
                            }
                            else
                            {
                                @:Project Site
                            }
                        </a>
                    </li>
                }
                @if (PackageHelper.ShouldRenderUrl(Model.LicenseUrl))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Certificate" aria-hidden="true"></i>
                        <a href="@Model.LicenseUrl" data-track="outbound-license-url" title="Make sure you agree with the license" rel="nofollow">
                            @if(Model.LicenseNames.AnySafe())
                            {
                                @(string.Join(", ", Model.LicenseNames.Select(x => x + " License")))
                            }
                            else
                            {
                                @:License Info
                            }
                        </a>
                    </li>
                }
                <li>
                    <i class="ms-Icon ms-Icon--Mail" aria-hidden="true"></i>
                    <a href="@Url.Action(actionName: "ContactOwners", controllerName: "Packages", routeValues: new { id = Model.Id })" title="Ask the package owners a question">Contact owners</a>
                </li>
                @if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Help" aria-hidden="true"></i>
                        <a href="@Url.Action(actionName: "ReportMyPackage", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version })" title="Contact the NuGet team for help with your package">
                            Contact support
                        </a>
                    </li>
                }
                else if (!Model.Deleted)
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Flag" aria-hidden="true"></i>
                        <a href="@Url.Action(actionName: "ReportAbuse", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version })" title="Report the package as abusive">
                            Report
                        </a>
                    </li>
                }

                @if (!Model.Deleted)
                {
                    <li>
                        <i class="ms-Icon ms-Icon--CloudDownload" aria-hidden="true"></i>
                        <a href="@Url.PackageDownload(2, Model.Id, Model.Version)" data-track="outbound-manual-download" title="Download the raw nupkg file." rel="nofollow">Manual download</a>
                    </li>
                    <li class="no-clickonce">
                        <i class="ms-Icon ms-Icon--OpenInNewWindow" aria-hidden="true"></i>
                        <a href="@Url.ExplorerDeepLink(2, Model.Id, Model.Version)" title="Explore the nupkg with the NuGet Package Explorer (IE only)" rel="nofollow">Open in Package Explorer</a>
                    </li>
                }

                @if (!Model.Deleted && (Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>
                        <a href="@Url.EditPackage(Model.Id, Model.Version)">Edit package</a>
                    </li>
                    <li>
                        <i class="ms-Icon ms-Icon--People" aria-hidden="true"></i>
                        <a href="@Url.ManagePackageOwners(Model)">Manage owners</a>
                    </li>
                    <li>
                        <i class="ms-Icon ms-Icon--Delete" aria-hidden="true"></i>
                        <a href="@Url.DeletePackage(Model)" class="delete">Delete package</a>
                    </li>
                }

                @if (!Model.Deleted && User.IsAdministrator())
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Refresh" aria-hidden="true"></i>
                        <a href="@Url.ReflowPackage(Model)">Reflow package</a>
                    </li>
                }
            </ul>
            @if (Model.LicenseNames.AnySafe())
            {
                <p>License info provided by <a href="http://sonatype.com/">Sonatype</a>.</p>
            }

            <h2>Statistics</h2>
            <ul class="list-unstyled ms-Icon-ul">
                <li>
                    <i class="ms-Icon ms-Icon--Download" aria-hidden="true"></i>
                    @Model.TotalDownloadCount.ToNuGetNumberString() total @(Model.TotalDownloadCount == 1 ? "download" : "downloads")
                </li>
                <li>
                    <i class="ms-Icon ms-Icon--Giftbox" aria-hidden="true"></i>
                    @Model.PackageVersions.First().DownloadCount.ToNuGetNumberString() @(Model.PackageVersions.First().DownloadCount == 1 ? "download" : "downloads")
                    of latest version
                </li>
                <li>
                    <i class="ms-Icon ms-Icon--Financial" aria-hidden="true"></i>
                    @Model.DownloadsPerDayLabel @(Model.DownloadsPerDayLabel == "1" || Model.DownloadsPerDayLabel == "<1" ? "download" : "downloads")
                    per day (avg)
                </li>
            </ul>
            @if (StatisticsHelper.IsStatisticsPageAvailable)
            {
                <a href="@Url.StatisticsPackageDownloadByVersion(Model.Id)" title="Package Statistics">View full stats</a>
            }

            <h2>Owners</h2>
            <ul class="list-unstyled owner-list">
                @foreach (var owner in Model.Owners)
                {
                    <li>
                        @if (!String.IsNullOrEmpty(owner.EmailAddress))
                        {
                            var size = 32;
                            var gravatarHtml = Gravatar.GetHtml(
                                owner.EmailAddress,
                                size,
                                "retro",
                                GravatarRating.G,
                                attributes: new { width = size, height = size, title = owner.Username });
                            if (gravatarHtml != null && Request.IsSecureConnection)
                            {
                                gravatarHtml = new HtmlString(gravatarHtml.ToHtmlString().Replace("http://www.gravatar.com/", "https://secure.gravatar.com/"));
                            }
                            <a href="@Url.User(owner)" title="@owner.Username">@gravatarHtml</a>
                        }
                        <a href="@Url.User(owner)" title="@owner.Username">
                            @owner.Username
                        </a>
                    </li>
                }
            </ul>

            <h2>Authors</h2>
            <p>@Model.Authors</p>

            @if (!String.IsNullOrEmpty(Model.Copyright))
            {
                <h2>Copyright</h2>
                <p>@Model.Copyright</p>
            }

            @if (Model.Tags.AnySafe())
            {
                <h3>Tags</h3>
                <p>
                    @foreach (var tag in Model.Tags)
                    {
                        <a href="@Url.Search("Tags:\"" + tag + "\"")" title="Search for @tag" class="tag">@tag</a>
                    }
                </p>
            }

            <h3>Share</h3>
            @{
                var encodedText = Url.Encode(string.Format("Check out {0} on #NuGet.", Model.Id));
            }
            <p>
                <a href="https://www.facebook.com/sharer/sharer.php?u=@absolutePackageUrl&t=@encodedText" target="_blank"><img width="24" height="24" src="~/Content/gallery/img/facebook.png" alt="Share on Facebook" /></a>
                <a href="https://twitter.com/intent/tweet?url=@absolutePackageUrl&text=@encodedText" target="_blank"><img width="24" height="24" src="~/Content/gallery/img/twitter.png" alt="Tweet this package" /></a>
            </p>
        </aside>
    </div>
</section>

@section BottomScripts {
    @Scripts.Render("~/Scripts/gallery/page-display-package.min.js")
}
