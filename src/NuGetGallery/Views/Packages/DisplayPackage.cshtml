@model DisplayPackageViewModel

@{
    ViewBag.Title = Model.Title + " " + Model.Version;
    ViewBag.Tab = "Packages";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
    var absolutePackageUrl = Url.Absolute(Url.Package(Model.Id));
}
@section SocialMeta {
    @if (!String.IsNullOrWhiteSpace(ViewBag.FacebookAppID))
    {
        <meta property="fb:app_id" content="@ViewBag.FacebookAppID" />
    }

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@("@nuget")">

    <meta property="og:title" content="@Model.Title" />
    <meta property="og:type" content="nugetgallery:package" />
    <meta property="og:url" content="@absolutePackageUrl" />
    <meta property="og:description" content="@Model.Description" />
    <meta property="og:determiner" content="a" />
    <meta property="og:image" content="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.png"))" />
}
@section Meta {
    @if (!Model.Listed || Model.Deleted)
    {
        <meta name="robots" content="noindex">
    }
}

<div class="container main-container page-package-details">
    <div class="row">
        <div class="col-md-1">
            <h3>
                <img class="img-responsive" alt="Icon for package @Model.Id" onerror="this.src = '@Url.Absolute("~/Content/gallery/img/default-package-icon.png")';"
                     src="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.png"))" />
            </h3>
        </div>
        <div class="col-md-8">
            <h1 title="@Model.Title">
                @Model.Title.Abbreviate(40)
                <small>@Model.Version</small>
            </h1>

            @foreach (var line in Model.Description.ToStringSafe().Split('\n'))
            {
                <p>@line</p>
            }

            @if (Model.HasPendingMetadata)
            {
                using (Html.BeginForm(actionName: "UndoPendingEdits", controllerName: "Packages"))
                {
                    @Html.AntiForgeryToken()
                    <div class="alert alert-info">
                        <ul class="list-unstyled ms-Icon-ul">
                            <li>
                                <i class="ms-Icon ms-Icon--Info" aria-hidden="true"></i>
                                An edit is pending for this package version. You are seeing the <em>edited</em> package description now.
                                These changes will be applied to the package file and become visible to everybody soon unless you
                                <input type="submit" value="undo pending edits" title="undo pending edits" style="display: inline; width: 200px; font-size: 1em;" />
                                first.
                            </li>
                        </ul>
                    </div>
                }
            }

            @if (Model.IsLastEditFailed)
            {
                <div class="alert alert-danger">
                    <ul class="list-unstyled ms-Icon-ul">
                        <li>
                            <i class="ms-Icon ms-Icon--ErrorBadge" aria-hidden="true"></i>
                            Your last edit to this package was not successfully applied.
                            You can <a href="@Url.EditPackage(Model.Id, Model.Version)">edit</a>
                            the package and submit the edit again to retry the edit.
                        </li>
                    </ul>
                </div>
            }

            @if (Model.Prerelease)
            {
                <div class="alert alert-info">
                    <ul class="list-unstyled ms-Icon-ul">
                        <li>
                            <i class="ms-Icon ms-Icon--Info" aria-hidden="true"></i>
                            This is a prerelease version of @Model.Title.Abbreviate(65).
                        </li>
                    </ul>
                </div>
            }

            @if (Model.LatestStableVersion && Model.HasNewerPrerelease)
            {
                <div class="alert alert-info">
                    <ul class="list-unstyled ms-Icon-ul">
                        <li>
                            <i class="ms-Icon ms-Icon--Info" aria-hidden="true"></i>
                            There is a newer prerelease version of this package available.
                            <br /> See the version list below for details.
                        </li>
                    </ul>
                </div>
            }

            @if (Model.Listed && Model.IsIndexed.HasValue && !Model.IsIndexed.Value)
            {
                <div class="alert alert-warning">
                    <ul class="list-unstyled ms-Icon-ul">
                        <li>
                            <i class="ms-Icon ms-Icon--Warning" aria-hidden="true"></i>
                            <strong>This package has not been indexed yet.</strong> It will appear in search results
                            and will be available for install/restore after indexing is completed.
                        </li>
                    </ul>
                </div>
            }

            @if (Model.Deleted)
            {
                <div class="alert alert-danger">
                    <ul class="list-unstyled ms-Icon-ul">
                        <li>
                            <i class="ms-Icon ms-Icon--ErrorBadge" aria-hidden="true"></i>
                            <strong>This package has been deleted from the gallery.</strong> It is no longer available
                            for install/restore.
                        </li>
                    </ul>
                </div>
            }

            @if (!Model.Listed && !Model.Deleted)
            {
                if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <div class="alert alert-warning">
                        <ul class="list-unstyled ms-Icon-ul">
                            <li>
                                <i class="ms-Icon ms-Icon--Warning" aria-hidden="true"></i>
                                This package is unlisted and hidden from package listings.
                                You can see the package because you are one of its owners. To list the package again,
                                <a href="@Url.DeletePackage(Model)">change its listing setting</a>.
                            </li>
                        </ul>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <ul class="list-unstyled ms-Icon-ul">
                            <li>
                                <i class="ms-Icon ms-Icon--Warning" aria-hidden="true"></i>
                                The owner has unlisted this package.
                                This could mean that the package is deprecated or shouldn't be used anymore.
                            </li>
                        </ul>
                    </div>
                }
            }

            @if (!String.IsNullOrEmpty(Model.MinClientVersion))
            {
                <p>Requires NuGet @Model.MinClientVersion or higher.</p>
            }

            <div class="install-tabs">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active">
                        <a href="#package-manager" aria-controls="package-manager" role="tab" data-toggle="tab">Package Manager</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="tab-package-manager">
                        <span class="install-script">
                            <span id="install-script-text">Install-Package @Model.Id -Version @Model.Version</span>
                        </span>
                        <span class="copy-button">
                            <button id="install-script-button" class="btn btn-default btn-warning" type="button"
                                    data-toggle="popover" data-placement="bottom" data-content="Copied."><span class="ms-Icon ms-Icon--Copy" aria-hidden="true"></span></button>
                        </span>
                    </div>
                </div>
            </div>

            @if (!String.IsNullOrWhiteSpace(Model.ReleaseNotes))
            {
                <h2>Release Notes</h2>

                // Not actually using <pre/> because its better to have wrapping text
                <p>@Html.PreFormattedText(Model.ReleaseNotes)</p>
            }

            @if (Model.Dependencies.DependencySets == null)
            {
                if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <h2>Dependencies</h2>
                    <p>
                        An error occurred processing dependencies.
                        Your package can still be downloaded and installed, but dependencies cannot be shown.
                        Please @Html.ActionLink("Contact Support", actionName: "ReportMyPackage", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version }, htmlAttributes: null) if you have questions.
                    </p>
                    <p>
                        <strong>Note: This message is only visible to you and any other package owners.</strong>
                    </p>
                }
            }
            else
            {
                <h2>Dependencies</h2>
                if (Model.Dependencies.DependencySets.Any())
                {
                    <ul class="list-unstyled">
                        @foreach (var dependencySet in Model.Dependencies.DependencySets)
                        {
                            var dependencySetTitle = dependencySet.Key;
                            <li>
                                @if (!Model.Dependencies.OnlyHasAllFrameworks)
                                {
                                    <h4><span>@dependencySetTitle</span></h4>
                                }
                                <ul class="list-unstyled dependency-group">
                                @foreach (var dependency in dependencySet.Value)
                                {
                                    <li>
                                    @if (dependency == null)
                                    {
                                        @:No dependencies.
                                    }
                                    else
                                    {
                                        <a href="@Url.Package(dependency.Id)">@dependency.Id</a>
                                        <span>@dependency.VersionSpec</span>
                                    }
                                    </li>
                                }
                                </ul>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p>This package has no dependencies.</p>
                }
            }

            <h2>Version History</h2>
            <table class="table borderless">
                <thead>
                    <tr>
                        <th>Version</th>
                        <th>Downloads</th>
                        <th>Last updated</th>
                        @if ((Model.IsOwner(User) || User.IsAdministrator()))
                        {
                            <th>Listed</th>
                        }
                    </tr>
                </thead>
                <tbody>
                @{var rowCount = 0;}
                @foreach (var packageVersion in Model.PackageVersions)
                {
                    if (!packageVersion.Deleted && (packageVersion.Listed || (Model.IsOwner(User) || User.IsAdministrator())))
                    {
                        rowCount++;
                        if (rowCount == 6)
                        {
                            @:</tbody><tbody class="collapse no-border" id="hidden-versions">
                        }

                        <tr>
                            <td>
                                @if (packageVersion.IsCurrent(Model))
                                {
                                    <a href="@Url.Package(packageVersion)">
                                        @packageVersion.Version
                                        @if (packageVersion.IsCurrent(Model))
                                        {
                                            @:(current version)
                                }
                                    </a>
                                }
                                else
                                {
                                    <a href="@Url.Package(packageVersion)">
                                        @packageVersion.Version
                                    </a>
                                }
                            </td>
                            <td>
                                @packageVersion.DownloadCount.ToNuGetNumberString()
                            </td>
                            <td>
                                <span data-datetime="@packageVersion.LastUpdated.ToString("O")">@packageVersion.LastUpdated.ToNuGetLongDateString()</span>
                            </td>
                            @if ((Model.IsOwner(User) || User.IsAdministrator()))
                            {
                                <td>
                                    <a href="@Url.DeletePackage(packageVersion)">@(packageVersion.Listed ? "yes" : "no")</a>
                                </td>
                            }
                        </tr>
                    }
                    else if (packageVersion.Deleted)
                    {
                        rowCount++;
                        if (rowCount == 6)
                        {
                            @:</tbody><tbody class="panel-collapse collapse no-border" id="hidden-versions">
                        }

                        <tr class="versionTableRow deleted">
                            <td class="version">
                                <s>@packageVersion.Version</s> (deleted)
                            </td>
                            <td>
                                @packageVersion.DownloadCount
                            </td>
                            <td>
                                <span data-datetime="@packageVersion.LastUpdated.ToString("O")">@packageVersion.LastUpdated.ToNuGetLongDateString()</span>
                            </td>
                            <td></td>
                        </tr>
                    }
                }
                </tbody>
            </table>
            @if (rowCount > 5)            {
                <button type="button" data-toggle="collapse" class="btn btn-link" data-target="#hidden-versions"
                        aria-expanded="false" aria-controls="hidden-versions" id="show-hidden-versions">
                    <i class="ms-Icon ms-Icon--ChevronDown" aria-hidden="true"></i>
                    <span>Show more</span>
                </button>
            }
        </div>
        <div class="col-md-3 package-details-info">
            <h2>Info</h2>
            <ul class="list-unstyled ms-Icon-ul">
                <li>
                    <i class="ms-Icon ms-Icon--History" aria-hidden="true"></i>
                    last updated <span data-datetime="@Model.LastUpdated.ToString("O")">@Model.LastUpdated.ToNuGetShortDateString()</span>
                </li>
                @if (PackageHelper.ShouldRenderUrl(Model.ProjectUrl))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Globe" aria-hidden="true"></i>
                        <a href="@Model.ProjectUrl" title="Visit the project site to learn more about this package" rel="nofollow">
                            @if(Model.ProjectUrl.Length <= 28)
                            {
                                @Model.ProjectUrl
                            }
                            else
                            {
                                @:Project Site
                            }
                        </a>
                    </li>
                }
                @if (PackageHelper.ShouldRenderUrl(Model.LicenseUrl))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Page" aria-hidden="true"></i>
                        <a href="@Model.LicenseUrl" title="Make sure you agree with the license" rel="nofollow">
                            @if(Model.LicenseNames.AnySafe())
                            {
                                @(string.Join(", ", Model.LicenseNames.Select(x => x + " License")))
                            }
                            else
                            {
                                @:License Info
                            }
                        </a>
                    </li>
                }
                <li>
                    <i class="ms-Icon ms-Icon--Mail" aria-hidden="true"></i>
                    <a href="@Url.Action(actionName: "ContactOwners", controllerName: "Packages", routeValues: new { id = Model.Id })" title="Ask the package owners a question">Contact owners</a>
                </li>
                @if ((Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Help" aria-hidden="true"></i>
                        <a href="@Url.Action(actionName: "ReportMyPackage", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version })" title="Contact the NuGet team for help with your package">
                            Contact support
                        </a>
                    </li>
                }
                else if (!Model.Deleted)
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Flag" aria-hidden="true"></i>
                        <a href="@Url.Action(actionName: "ReportAbuse", controllerName: "Packages", routeValues: new { id = Model.Id, version = Model.Version })" title="Report the package as abusive">
                            Report
                        </a>
                    </li>
                }

                @if (!Model.Deleted)
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Download" aria-hidden="true"></i>
                        <a href="@Url.PackageDownload(2, Model.Id, Model.Version)" title="Download the raw nupkg file." rel="nofollow">Manual download</a>
                    </li>
                    <li class="no-clickonce">
                        <i class="ms-Icon ms-Icon--OpenInNewWindow" aria-hidden="true"></i>
                        <a href="@Url.ExplorerDeepLink(2, Model.Id, Model.Version)" title="Explore the nupkg with the NuGet Package Explorer (IE only)" rel="nofollow">Open in Package Explorer</a>
                    </li>
                }

                @if (!Model.Deleted && (Model.IsOwner(User) || User.IsAdministrator()))
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>
                        <a href="@Url.EditPackage(Model.Id, Model.Version)">Edit package</a>
                    </li>
                    <li>
                        <i class="ms-Icon ms-Icon--People" aria-hidden="true"></i>
                        <a href="@Url.ManagePackageOwners(Model)">Manage owners</a>
                    </li>
                    <li>
                        <i class="ms-Icon ms-Icon--Delete" aria-hidden="true"></i>
                        <a href="@Url.DeletePackage(Model)" class="delete">Delete package</a>
                    </li>
                }

                @if (!Model.Deleted && User.IsAdministrator())
                {
                    <li>
                        <i class="ms-Icon ms-Icon--Refresh" aria-hidden="true"></i>
                        <a href="@Url.ReflowPackage(Model)">Reflow package</a>
                    </li>
                }
            </ul>
            @if (Model.LicenseNames.AnySafe())
            {
                <p>License info provided by <a href="http://sonatype.com/">Sonatype</a>.</p>
            }

            <h2>Statistics</h2>
            <ul class="list-unstyled ms-Icon-ul">
                <li>
                    <i class="ms-Icon ms-Icon--Download" aria-hidden="true"></i>
                    @Model.TotalDownloadCount.ToNuGetNumberString() total @(Model.TotalDownloadCount == 1 ? "download" : "downloads")
                </li>
                <li>
                    <i class="ms-Icon ms-Icon--Giftbox" aria-hidden="true"></i>
                    @Model.PackageVersions.First().DownloadCount.ToNuGetNumberString() @(Model.PackageVersions.First().DownloadCount == 1 ? "download" : "downloads")
                    of latest version
                </li>
                <li>
                    <i class="ms-Icon ms-Icon--Financial" aria-hidden="true"></i>
                    @Model.DownloadsPerDay.ToNuGetNumberString() @(Model.DownloadsPerDay == 1 ? "download" : "downloads")
                    per day (avg)
                </li>
            </ul>
            @if (StatisticsHelper.IsStatisticsPageAvailable)
            {
                <a href="@Url.StatisticsPackageDownloadByVersion(Model.Id)" title="Package Statistics">View full stats</a>
            }

            <h2>Owners</h2>
            <ul class="list-unstyled owner-list">
                @foreach (var owner in Model.Owners)
                {
                    <li>
                        @if (!String.IsNullOrEmpty(owner.EmailAddress))
                        {
                            var size = 32;
                            var gravatarHtml = Gravatar.GetHtml(
                                owner.EmailAddress,
                                size,
                                "retro",
                                GravatarRating.G,
                                attributes: new { width = size, height = size, title = owner.Username });
                            if (gravatarHtml != null && Request.IsSecureConnection)
                            {
                                gravatarHtml = new HtmlString(gravatarHtml.ToHtmlString().Replace("http://www.gravatar.com/", "https://secure.gravatar.com/"));
                            }
                            <a href="@Url.User(owner)" title="@owner.Username">@gravatarHtml</a>
                        }
                        <a href="@Url.User(owner)" title="@owner.Username">
                            @owner.Username
                        </a>
                    </li>
                }
            </ul>

            <h2>Authors</h2>
            <p>@Model.Authors</p>

            @if (!String.IsNullOrEmpty(Model.Copyright))
            {
                <h2>Copyright</h2>
                <p>@Model.Copyright</p>
            }

            @if (Model.Tags.AnySafe())
            {
                <h3>Tags</h3>
                <p>
                    @foreach (var tag in Model.Tags)
                    {
                        <a href="@Url.Search("Tags:\"" + tag + "\"")" title="Search for @tag" class="tag">@tag</a>
                    }
                </p>
            }

            <h3>Share</h3>
            @{
                var encodedText = Url.Encode(string.Format("Check out {0} on #NuGet.", Model.Id));
            }
            <p>
                <a href="https://www.facebook.com/sharer/sharer.php?u=@absolutePackageUrl&t=@encodedText" target="_blank" title="Share on Facebook"><img width="24" height="24" src="~/Content/gallery/img/facebook.png" alt="Small icon of Facebook's logo" /></a>
                <a href="https://twitter.com/intent/tweet?url=@absolutePackageUrl&text=@encodedText" target="_blank" title="Tweet this package"><img width="24" height="24" src="~/Content/gallery/img/twitter.png" alt="Small icon of Twitter's logo" /></a>
            </p>
        </div>
    </div>
</div>

@section BottomScripts {
    @Scripts.Render("~/Scripts/gallery/page-display-package.min.js")
}
