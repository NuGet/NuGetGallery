@model SubmitPackageRequest
@{
    ViewBag.Title = "Upload Package";
    ViewBag.Tab = "Upload";
    ViewBag.MdPageColumns = Constants.ColumnsFormMd;
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
}

<section role="main" class="container main-container page-upload">
    <div class="row">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">
            @ViewHelpers.PackagesBreadcrumb(Url, CurrentUser, true, @<text>Upload</text>)
            <div class="text-center">
                <p class="message">Your package file will be uploaded and hosted on the @(Config.Current.Brand) server (@(Config.Current.SiteRoot)).</p>
            </div>
            <div id="upload-package-container">
                <h2>
                    <a href="#" role="button" data-toggle="collapse" data-target="#upload-package-form"
                       aria-expanded="false" aria-controls="upload-package-form" id="show-upload-package-form">
                        <i class="ms-Icon ms-Icon--ChevronDown" aria-hidden="true"></i>
                        <span>Upload</span>
                    </a>
                </h2>
                <div class="collapse in" id="upload-package-form" aria-expanded="true">
                    <form aria-hidden="true" id="cancel-form">
                        @Html.AntiForgeryToken()
                    </form>
                    <form aria-label="Upload a package" id="uploadForm" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary(true)

                        <div class="input-group">
                            <input type="text" class="form-control" id="file-select-feedback" value="Browse or Drop files to select a package..." aria-label="Upload Your Package" readonly />
                            <label for="input-select-file" id="PackageFileLabel" class="input-group-btn">
                                <span id="browse-for-package-button" class="btn btn-primary form-control" tabindex="0" aria-label="Browse for package" role="button">
                                    Browse&hellip;<input type="file" name="UploadFile" accept=".nupkg" aria-labelledby="PackageFileLabel" id="input-select-file" style="display:none;" />
                                </span>
                            </label>
                        </div>
                    </form>

                    <div id="upload-progress-bar-container" class="progress hidden">
                        <div id="upload-progress-bar" class="progress-bar active" role="progressbar" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>

                    <div id="validation-failure-container" class="hidden">
                    </div>
                </div>
            </div>


            @if (Model != null && Model.IsUploadInProgress)
            {
                <div id="warning-container">
                    @ViewHelpers.AlertWarning(@<text>You had an upload in progress. You can continue it here or cancel to restart.</text>                    )
                    @ViewHelpers.AlertPackageVerifyRecommendation()
                </div>
            }
            else
            {
                <div id="verify-warning-container" class="hidden">
                    @ViewHelpers.AlertPackageVerifyRecommendation()
                </div>
            }

            @Html.Partial("_VerifyForm")
        </div>
    </div>
</section>

@section BottomScripts
{
    @* Right now this is the only page that uses this script. If we increase our usage of it, we should put it in our bundles *@
    @Scripts.Render("~/Scripts/gallery/page-edit-readme.js")
    @Scripts.Render("~/Scripts/gallery/async-file-upload.js")
    <script type="text/javascript">
        var InProgressPackage = @Html.Raw(Json.Encode(Model.InProgressUpload));
        window.nuget.configureExpanderHeading("upload-package-form");
        $(function () {
            $("#browse-for-package-button").on("keypress", function (e) {
                var code = (e.keyCode || e.which);
                var isInteract = (code == 13 /*enter*/ || code == 32 /*space*/) && !e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey;
                if (isInteract) {
                    $(this).click();
                }
            });

            AsyncFileUploadManager.init(
                '@Url.UploadPackageProgress()',
                'uploadForm',
                '@Scripts.Url("~/Scripts/jquery")',
                '@Url.UploadPackage()',
                '@Url.CancelUpload()',
                '@Url.VerifyPackage()');
        });
    </script>
}
