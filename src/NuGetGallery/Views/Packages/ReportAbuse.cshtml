@using PoliteCaptcha
@model ReportAbuseViewModel
@{
    ViewBag.Tab = "Packages";
    string returnUrl = ViewData.ContainsKey(Constants.ReturnUrlViewDataKey) ? (string)ViewData[Constants.ReturnUrlViewDataKey] : Request.RawUrl;
}

<h1 class="page-heading">Report Abuse</h1>

<p class="message">
    <strong>Important: Please do not use this form to report a bug in a package you are using!</strong><br />
    This form is for reporting <em>abusive</em> packages such as
    packages containing <em>malicious code</em> or spam. If "@Model.PackageId" simply doesn't
    work, or if you need help getting the package installed, please
    <a href="@Url.Action(actionName: "ContactOwners", controllerName: "Packages", routeValues: new { id = Model.PackageId })" title="contact the owners">contact the owners instead.</a>
</p>

<p>
    Please provide a detailed abuse report. Include exactly what the package did, for example if you are reporting a package with a virus or malicious code,
    <em>please provide evidence to support your claim!</em> We cannot delete packages without evidence that they exhibit malicious behavior.
</p>

@if (!Model.ConfirmedUser)
{
    <p>
        Note: if you are the owner of @Model.PackageId, please
        <a href="@Url.LogOn(returnUrl)">sign in now before you complete this form.</a>
    </p>
}

@using (Html.BeginForm())
{
    <fieldset id="report-abuse-form" class="form">
        <legend>Report Abuse</legend>
        @Html.AntiForgeryToken()
        <div class="form-field">
            @if (!Model.ConfirmedUser)
            {
                @Html.LabelFor(m => m.Email, new { id = "ReportAbuse_Email_Label" })
                @Html.EditorFor(m => m.Email, new { htmlAttributes = new { aria_labelledby = "ReportAbuse_Email_Label ReportAbuse_Email_Help" } })
                <span class="field-hint-message" id="ReportAbuse_Email_Help">Provide your email address so we can follow up with you.</span>
                @Html.ValidationMessageFor(m => m.Email)
            }
            else
            {
                <input type="hidden" name="Email" value="test@example.com" />
            }
        </div>
        <div id="form-field-reason" class="form-field">
            @Html.LabelFor(m => m.Reason)
            @Html.EnumDropDownListFor(m => m.Reason, Model.ReasonChoices, "<Choose a Reason>")
            @Html.ValidationMessageFor(m => m.Reason)
        </div>
        <div class="form-field">
            @Html.CheckBoxFor(m => m.AlreadyContactedOwner)
            @Html.LabelFor(m => m.AlreadyContactedOwner, "Yes! I have already tried to contact the package owner about this problem.",
                new Dictionary<string, object>
                {
                    { "style", "display: inline" },
                })<br />
        </div>
        <div class="form-field">
            @Html.LabelFor(m => m.Message, "Abuse Report")
            <p>In addition to selecting the reason for reporting the package, you must provide details of the problem here.</p>
            @Html.TextAreaFor(m => m.Message, 10, 50, null)
            @Html.ValidationMessageFor(m => m.Message, null, new { id = "report-abuse-message" })
        </div>
        <div class="form-field">
            @Html.CheckBoxFor(m => m.CopySender)
            @Html.LabelFor(m => m.CopySender, new { @class = "checkbox" })
        </div>
        <div class="form-field infringement-claim-requirements">
            <br /><span style="color: red">*</span> Required Statements for infringement claims<br /><br />
            <strong>Good Faith Belief:</strong><br />
            <p>
                By typing my name (electronic signature), I have a good faith belief that the use of the material is not authorized by the intellectual property owner, its agent, or the law (e.g., it is not fair use).
            </p>
            <strong>Authority to Act:</strong>
            <p>
                I represent that the information in the notification is accurate, and under penalty of perjury, that I am authorized to act on behalf of the owner of an exclusive right that is allegedly infringed.
            </p>
            <strong>512(f) Acknowledgement:</strong>
            <p>
                As applicable under 17 U.S.C. 512(f), I acknowledge that I may be subject to liability for damages if I knowingly materially misrepresent that material or activity is infringing.
            </p>
            @Html.LabelFor(m => m.Signature, new { id = "ReportAbuse_Signature_Label" })
            @Html.EditorFor(m => m.Signature, new { htmlAttributes = new { aria_labelledby = "ReportAbuse_Signature_Label ReportAbuse_Signature_Help" } })
            <span class="field-hint-message" id="ReportAbuse_Signature_Help">Sign with your real name.</span>
            @Html.ValidationMessageFor(m => m.Signature)
        </div>
        <div class="infringement-claim-requirements">You can also send us an email at <a href="mailto:admin@nuget.org">admin@nuget.org</a></div>
        <img src="@Url.Content("~/Content/images/required.png")" alt="Blue border on left means required." />
        @Html.SpamPreventionFields()
        <input id="form-submit" type="submit" value="Report" title="Report '@Model.PackageId' for abuse" />
    </fieldset>
}

@section BottomScripts {
    @Html.SpamPreventionScript()
    <script>
        function reasonSelected() {
            var $form = $('#Reason').parents('form');
            var val = $('#Reason').val();
            if (val) {
                $form.validate().element($('#Reason'));
            }

            if (val === 'HasABugOrFailedToInstall') {
                $form.find("input, textarea, select").not('#form-field-reason *').attr('disabled', 'disabled');
            } else {
                $form.find("input, textarea, select").not('#form-field-reason').removeAttr('disabled');
            }

            if (val == 'ViolatesALicenseIOwn') {
                $form.find('.infringement-claim-requirements').show();
                $('#Signature').rules("add", {
                    required: true,
                    maxlength: 1000,
                    messages: {
                        required: "Please sign using your name."
                    }
                });
                $('#Signature').attr('data-val-required', 'Please sign using your name.');
            } else {
                $form.find('.infringement-claim-requirements').hide();
                $('#Signature').rules('remove', 'required');
            }
        }

        $(function () {
            $('#Reason').change(reasonSelected);
            reasonSelected(); // Run once in case it starts with the bad selection
        });
    </script>
}