@using PoliteCaptcha
@model ReportAbuseViewModel
@{
    ViewBag.Title = "Report Abuse by " + Model.PackageId + " " + Model.PackageVersion;
    ViewBag.MdPageColumns = Constants.ColumnsFormMd;
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
    string returnUrl = ViewData.ContainsKey(Constants.ReturnUrlViewDataKey) ? (string)ViewData[Constants.ReturnUrlViewDataKey] : Request.RawUrl;
}

<section role="main" class="container main-container page-report-abuse">
    <div class="row report-form">
        <div class="@ViewHelpers.GetColumnClasses(ViewBag)">
            @Html.Partial(
                "_PackageHeading", 
                new PackageHeadingModel(
                    Model.PackageId, 
                    Model.PackageVersion, 
                    "Report abuse"))

            @ViewHelpers.AlertWarning(isAlertRole: true, htmlContent:
                @<text>
                    <strong>Important - Please do not use this form to report a bug in a package you are using!</strong><br />
                    This form is for reporting abusive packages such as
                    packages containing malicious code or spam. If "@Model.PackageId" simply doesn't
                    work, or if you need help getting the package installed, please
                    <a href="@Url.ContactOwners(Model.PackageId, Model.PackageVersion)" title="contact the owners">contact the owners instead.</a>
                </text>
            )

            <p>
                Please provide a detailed abuse report with evidence to support your claim! We cannot delete packages without evidence that they exhibit malicious behavior.
            </p>

            @if (!Model.ConfirmedUser)
            {
                <p>
                    Note: If this is your package and you would like to contact support, please
                    <a href="@Url.LogOn(returnUrl)">sign in.</a>
                </p>
            }
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.SpamPreventionFields()

                <div id="form-field-reason" class="form-group @Html.HasErrorFor(m => m.Reason)">
                    @Html.ShowLabelFor(m => m.Reason)
                    <p>Please select the reason for contacting support about this package.</p>
                    @Html.ShowEnumDropDownListFor(m => m.Reason, Model.ReasonChoices, "<Choose a Reason>")
                    @Html.ShowValidationMessagesFor(m => m.Reason)
                </div>

                <div id="report-abuse-form">
                    <div class="form-group @Html.HasErrorFor(m => m.Email)">
                        @Html.ShowLabelFor(m => m.Email)
                        @Html.ShowTextBoxFor(m => m.Email)
                        @Html.ShowValidationMessagesFor(m => m.Email)
                    </div>
                    <div class="form-group @Html.HasErrorFor(m => m.AlreadyContactedOwner)">
                        @Html.ShowCheckboxFor(m => m.AlreadyContactedOwner)
                        @Html.ShowLabelFor(m => m.AlreadyContactedOwner)
                        @Html.ShowValidationMessagesFor(m => m.AlreadyContactedOwner)
                    </div>
                    <div class="form-group @Html.HasErrorFor(m => m.Message)">
                        @Html.ShowLabelFor(m => m.Message)
                        <p>Please provide a detailed description of the problem.<span class="infringement-claim-requirements"> If you are reporting copyright infringement, please describe the copyrighted material with particularity and provide us with information about your copyright (i.e. title of copyrighted work, URL where to view your copyrighted work, description of your copyrighted work, and any copyright registrations you may have, etc.). For trademark infringement, include the name of your trademark, registration number, and country where registered.</span></p>
                        @Html.ShowTextAreaFor(m => m.Message, 10, 50)
                        @Html.ShowValidationMessagesFor(m => m.Message)
                    </div>
                    <div class="form-group @Html.HasErrorFor(m => m.CopySender)">
                        @Html.ShowCheckboxFor(m => m.CopySender)
                        @Html.ShowLabelFor(m => m.CopySender)
                        @Html.ShowValidationMessagesFor(m => m.CopySender)
                    </div>
                    <div class="form-group infringement-claim-requirements @Html.HasErrorFor(m => m.Signature)">
                        <h2><span style="color:red">*</span> Required Statements for infringement claims</h2>
                        <h2>Good Faith Belief:</h2>
                        <p>
                            By typing my name (electronic signature), I have a good faith belief that the use of the material is not authorized by the intellectual property owner, its agent, or the law (e.g., it is not fair use).
                        </p>
                        <h2>Authority to Act:</h2>
                        <p>
                            I represent that the information in the notification is accurate, and under penalty of perjury, that I am authorized to act on behalf of the owner of an exclusive right that is allegedly infringed.
                        </p>
                        <h2>512(f) Acknowledgement:</h2>
                        <p>
                            As applicable under 17 U.S.C. 512(f), I acknowledge that I may be subject to liability for damages if I knowingly materially misrepresent that material or activity is infringing.
                        </p>
                        @Html.ShowLabelFor(m => m.Signature)
                        @Html.ShowTextBoxFor(m => m.Signature)
                        @Html.ShowValidationMessagesFor(m => m.Signature)
                    </div>
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary form-control" value="Report" />
                    </div>
                </div>
            }
        </div>
    </div>
</section>

@section BottomScripts {
    @Html.SpamPreventionScript()
    <script>
        function reasonSelected() {
            var $form = $('#Reason').parents('form');
            var val = $('#Reason').val();
            if (val) {
                $form.validate().element($('#Reason'));
            }

            if (val === 'HasABugOrFailedToInstall') {
                $('#report-abuse-form').hide();
            } else {
                $('#report-abuse-form').show();
            }

            if (val == 'ViolatesALicenseIOwn') {
                $form.find('.infringement-claim-requirements').show();
                $('#Signature').rules("add", {
                    required: true,
                    maxlength: 1000,
                    messages: {
                        required: "Please sign using your name."
                    }
                });
                $('#Signature').attr('data-val-required', 'Please sign using your name.');
            } else {
                $form.find('.infringement-claim-requirements').hide();
                $('#Signature').rules('remove', 'required');
            }
        }

        $(function () {
            $('#Reason').change(reasonSelected);
            reasonSelected(); // Run once in case it starts with the bad selection
        });
    </script>
}