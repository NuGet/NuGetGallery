@model LogOnViewModel
@{
    ViewBag.Title = "Sign In";
    ViewBag.Tab = "Sign in";
    Layout = "~/Views/Shared/Gallery/Layout.cshtml";
}

<div class="container main-container page-sign-in">
    <div class="row">
        <h1>Sign in</h1>
    </div>

    @foreach (var provider in Model.Providers)
    {
        <div class="row">
            <p>
                @if (!string.IsNullOrEmpty(provider.UI.SignInInfo))
                {
                    @provider.UI.SignInInfo
                }
                else
                {
                    <text>
                        We recommend using a @(provider.UI.AccountNoun ?? "external account") to sign in to NuGet.org.
                        If you already have a NuGet.org account, click the button to the right to associate it with your @(provider.UI.AccountNoun ?? "external account").
                        If not, click the button anyway and we'll create a new NuGet.org account for you!
                    </text>
                }
            </p>
        </div>
        <div class="row text-center">
            <a role="button" class="btn btn-default provider-button" href="@Url.Action("Authenticate", new {provider = provider.ProviderName, returnUrl = ViewData[Constants.ReturnUrlViewDataKey]})">
                @if (!string.IsNullOrEmpty(@provider.UI.IconImagePath))
                {
                    <img height="24" width="24" src="@Href(provider.UI.IconImagePath)" alt="Icon for @provider.ProviderName authentication provider" />
                }                    
                @provider.UI.SignInMessage
            </a>
        </div>
        <div class="row text-center or-row">
            <b>OR</b>
        </div>
    }

    <div class="row">
        <div class="col-md-offset-3 col-md-6">
            @{
                var returnUrl = ViewData.ContainsKey(Constants.ReturnUrlViewDataKey) ? (string)ViewData[Constants.ReturnUrlViewDataKey] : Request.RawUrl;
            }
            @using (Html.BeginForm("SignIn", "Authentication"))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("ReturnUrl", returnUrl)
                @Html.Hidden("LinkingAccount", Model.External != null)

                if (Model.External != null)
                {
                    @Html.HiddenFor(m => m.External.ProviderAccountNoun)
                    @Html.HiddenFor(m => m.External.AccountName)
                    @Html.HiddenFor(m => m.External.FoundExistingUser)
                }

                <div class="form-group @ViewHelpers.HasError(ViewData.ModelState, "SignIn")">
                    @ViewHelpers.ShowErrors(ViewData.ModelState, "SignIn")
                </div>

                <div class="form-group @ViewHelpers.HasError(ViewData.ModelState, "SignIn.UserNameOrEmail")">
                    <label for="SignIn.UserNameOrEmail">NuGet.org Username or Email</label>
                    <input type="text" class="form-control" id="SignIn.UserNameOrEmail" name="SignIn.UserNameOrEmail"
                            placeholder="Username or email" value="@Model.SignIn.UserNameOrEmail" title="Username or email field" />
                    @ViewHelpers.ShowErrors(ViewData.ModelState, "SignIn.UserNameOrEmail")
                </div>
                <div class="form-group @ViewHelpers.HasError(ViewData.ModelState, "SignIn.Password")">
                    <label for="SignIn.Password">Password</label>
                    <input type="password" class="form-control" id="SignIn.Password" name="SignIn.Password" title="Password field" />
                    @ViewHelpers.ShowErrors(ViewData.ModelState, "SignIn.Password")
                </div>
                <p>
                    @Html.ActionLink("Forgot your Password?", "ForgotPassword", "Users")
                </p>
                <div class="form-group">
                    <input type="submit" class="btn btn-primary form-control" value="Sign in" />
                </div>
            }
            <p class="text-center">
                Don't have an account? <a href="@Url.SignUp(returnUrl)">Register</a>
            </p>
        </div>
    </div>
</div>