@model ListPackageItemViewModel

<article class="package" role="listitem">

    <div class="row">
        <div class="col-sm-1 hidden-xs hidden-sm">
            <img class="package-icon img-responsive" aria-hidden="true" alt=""
                 src="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.svg"))"
                 @ViewHelpers.ImageFallback(Url.Absolute("~/Content/gallery/img/default-package-icon-256x256.png")) />
        </div>
        <div class="col-sm-11">
            <div class="package-header">
                <a class="package-title" href="@Url.Package(Model.Id, Model.UseVersion ? Model.Version : null)">@Html.BreakWord(Model.Id)</a>

                @if (Model.IsVerified.HasValue && Model.IsVerified.Value)
                {
                    <img class="reserved-indicator" 
                         src="~/Content/gallery/img/reserved-indicator.svg" 
                         @ViewHelpers.ImageFallback(Url.Absolute("~/Content/gallery/img/reserved-indicator-20x20.png"))
                         title="@Strings.ReservedNamespace_ReservedIndicatorTooltip"/>
                }

                <span class="package-by">
                    by:
                    @foreach (var owner in Model.Owners)
                    {
                        <a href="@Url.User(owner)" title="View @owner.Username's profile">@owner.Username</a>
                    }
                </span>
            </div>

            @if (!StringComparer.OrdinalIgnoreCase.Equals(Model.Id, Model.Title))
            {
                <div class="package-title">
                    @Html.BreakWord(Model.Title)
                </div>
            }

            <ul class="package-list">
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--Download" aria-hidden="true"></i>
                        @Model.TotalDownloadCount.ToNuGetNumberString() total @(Model.TotalDownloadCount == 1 ? "download" : "downloads")
                    </span>
                </li>
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--History" aria-hidden="true"></i>
                        last updated <span data-datetime="@Model.LastUpdated.ToString("O")">@Model.LastUpdated.ToNuGetShortDateString()</span>
                    </span>
                </li>
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--Flag" aria-hidden="true"></i>
                        Latest version: <span class="text-nowrap">@Model.FullVersion @(Model.Prerelease ? "(prerelease)" : "")</span>
                    </span>
                </li>
                @if (Model.Tags.AnySafe())
                {
                    <li class="package-tags">
                        <span class="icon-text">
                            <i class="ms-Icon ms-Icon--Tag" aria-hidden="true"></i>
                            @foreach (var tag in Model.Tags)
                            {
                                <a href="@Url.Search("Tags:\"" + tag + "\"")" title="Search for @tag">@tag</a>
                            }
                        </span>
                    </li>
                }
            </ul>

            <div class="package-details">
                @Model.ShortDescription
                @if (Model.IsDescriptionTruncated)
                {
                    @Html.RouteLink("More information", RouteName.DisplayPackage, new { Model.Id, Model.Version })
                }
            </div>
            
            @if (Model.CanEdit ||
                Model.CanManageOwners ||
                Model.CanUnlistOrRelist)
            {
                <ul class="package-list manage-package">
                    @if (Model.CanEdit)
                    {
                        <li>
                            <a href="@Url.EditPackage(Model.Id, Model.Version)" class="icon-link">
                                <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>
                                <span>Edit Package</span>
                            </a>
                        </li>
                    }
                    @if (Model.CanManageOwners)
                    {
                        <li>
                            <a href="@Url.ManagePackageOwners(Model)" class="icon-link">
                                <i class="ms-Icon ms-Icon--People" aria-hidden="true"></i>
                                <span>Manage Owners</span>
                            </a>
                        </li>
                    }
                    @if (Model.CanUnlistOrRelist)
                    {
                        <li>
                            <a href="@Url.DeletePackage(Model)" class="icon-link">
                                <i class="ms-Icon ms-Icon--Delete" aria-hidden="true"></i>
                                <span>Delete Package</span>
                            </a>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</article>