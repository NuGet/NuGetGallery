@model ListPackageItemViewModel
@{
    var eventName = "search-selection";
    if (ViewData.ContainsKey("eventName"))
    {
        eventName = ViewData["eventName"].ToStringOrNull();
    }

    // This view data will sometimes be null or missing. For example, the profile page uses this partial and should not
    // emit search selection events.
    int? itemIndex = null;
    int parsedItemIndex;
    if (ViewData.ContainsKey("itemIndex")
        && int.TryParse(ViewData["itemIndex"].ToStringOrNull(), out parsedItemIndex))
    {
        itemIndex = parsedItemIndex;
    }

    // Don't show the edit button in some cases. For example, on the search side-by-side page we don't need it.
    bool showEditButton;
    if (!ViewData.ContainsKey("showEditButton")
        || !bool.TryParse(ViewData["showEditButton"].ToStringOrNull(), out showEditButton))
    {
        showEditButton = true;
    }
}


<article class="package" role="listitem">

    <div class="row">
        <div class="col-sm-1 hidden-xs hidden-sm col-package-icon">
            <img class="package-icon img-responsive" aria-hidden="true" alt=""
                 src="@(PackageHelper.ShouldRenderUrl(Model.IconUrl) ? Model.IconUrl : Url.Absolute("~/Content/gallery/img/default-package-icon.svg"))"
                 @ViewHelpers.ImageFallback(Url.Absolute("~/Content/gallery/img/default-package-icon-256x256.png")) />
        </div>
        <div class="col-sm-11">
            <div class="package-header">
                <a class="package-title"
                   href="@Url.Package(Model.Id, Model.UseVersion ? Model.Version : null)"
                   @if (itemIndex.HasValue)
                   {
                       @:data-track="@eventName" data-track-value="@itemIndex"
                   }
                   >@Html.BreakWord(Model.Id)</a>

                @if (Model.IsVerified.HasValue && Model.IsVerified.Value)
                {
                    <img class="reserved-indicator"
                         src="~/Content/gallery/img/reserved-indicator.svg"
                         @ViewHelpers.ImageFallback(Url.Absolute("~/Content/gallery/img/reserved-indicator-20x20.png"))
                         title="@Strings.ReservedNamespace_ReservedIndicatorTooltip" />
                }

                @if (showEditButton && (Model.CanEdit || Model.CanManageOwners || Model.CanUnlistOrRelist))
                {
                    <a href="@Url.ManagePackage(Model)" class="icon-link edit-button" title="Manage @Model.Id">
                        <i class="ms-Icon ms-Icon--Edit" aria-hidden="true"></i>
                    </a>
                }

                @if (Model.Owners != null && Model.Owners.Any())
                {
                    <span class="package-by">
                        by:
                        @foreach (var owner in Model.Owners)
                        {
                            <a href="@Url.User(owner)" title="View @owner.Username's profile">@owner.Username</a>
                        }
                    </span>
                }
            </div>

            @if (!StringComparer.OrdinalIgnoreCase.Equals(Model.Id, Model.Title))
            {
                <div class="package-title package-legacy-title">
                    @Html.BreakWord(Model.Title)
                </div>
            }

            <ul class="package-list">
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--Download" aria-hidden="true"></i>
                        @Model.TotalDownloadCount.ToNuGetNumberString() total @(Model.TotalDownloadCount == 1 ? "download" : "downloads")
                    </span>
                </li>
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--History" aria-hidden="true"></i>
                        last updated <span data-datetime="@Model.LastUpdated.ToString("O")">@Model.LastUpdated.ToNuGetShortDateString()</span>
                    </span>
                </li>
                <li>
                    <span class="icon-text">
                        <i class="ms-Icon ms-Icon--Flag" aria-hidden="true"></i>
                        Latest version: <span class="text-nowrap">@Model.FullVersion @(Model.Prerelease ? "(prerelease)" : "")</span>
                    </span>
                </li>
                @if (Model.Tags.AnySafe())
                {
                    <li class="package-tags">
                        <span class="icon-text">
                            <i class="ms-Icon ms-Icon--Tag" aria-hidden="true"></i>
                            @foreach (var tag in Model.Tags)
                            {
                                <a href="@Url.Search("Tags:\"" + tag + "\"")" title="Search for @tag">@tag</a>
                            }
                        </span>
                    </li>
                }
            </ul>

            <div class="package-details">
                @Model.ShortDescription
                @if (Model.IsDescriptionTruncated)
                {
                    @Html.RouteLink("More information", RouteName.DisplayPackage, new { Model.Id, Model.Version })
                }
            </div>
        </div>
    </div>
</article>
