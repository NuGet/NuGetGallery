@{
    ViewBag.Title = "Package Sponsorship Management";
}

<section role="main" class="container main-container">
    <h2>Package Sponsorship Management</h2>

    <p>Search for packages to view and manage their sponsorship URLs.</p>

    <form>
        <textarea placeholder="Search for packages (e.g. jQuery 1.8.0)" autocomplete="off" autofocus style="width: 100%;" rows="5" class="textarea-brand" data-bind="value: searchQuery"></textarea><br />
        <input type="button" class="btn-brand-secondary" value="Search" data-bind="click: search" />
    </form>

    <table class="table" id="searchResults" style="display: none" data-bind="visible: searchResults().length > 0" aria-label="Search results">
        <thead>
            <tr>
                <th>Package ID</th>
                <th>Sponsorship Links</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: searchResults">
            <tr>
                <td><a href="#" data-bind="text: PackageId, attr: { href: $parent.generatePackageUrl($data) }"></a></td>
                <td>
                    <!-- Current sponsorship links -->
                    <div class="sponsorship-links">
                        <div data-bind="if: SponsorshipUrls && SponsorshipUrls().length > 0">
                            <div data-bind="attr: { id: 'sponsorship-links-container-' + PackageId }">
                                <!-- ko foreach: SponsorshipUrls -->
                                <div class="sponsorship-link-item" style="margin-bottom: 8px;">
                                    <div class="row">
                                        <div class="col-xs-8 col-sm-9 col-md-9">
                                            <a data-bind="attr: { href: $data }, text: $data" target="_blank"></a>
                                        </div>
                                        <div class="col-xs-4 col-sm-3 col-md-3 text-right">
                                            <a role="button" class="icon-link text-danger"
                                               href="#"
                                               data-bind="attr: { 'data-url': $data, 'aria-label': 'Remove sponsorship link ' + $data }, click: function() { $parents[1].removeSponsorshipUrl($parent, $data); }">
                                                <i class="ms-Icon ms-Icon--Cancel" aria-hidden="true"></i>
                                                <span>Remove</span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                                <!-- /ko -->
                            </div>
                        </div>
                        <div data-bind="if: !SponsorshipUrls || SponsorshipUrls().length === 0">
                            <div data-bind="attr: { id: 'sponsorship-links-container-' + PackageId }">
                                <p><em>No sponsorship links</em></p>
                            </div>
                        </div>

                        <!-- Add new sponsorship link -->
                        <div>
                            <div class="input-group">
                                <input type="url" 
                                       class="form-control input-sm" 
                                       placeholder="Add sponsorship URL" 
                                       data-bind="value: newSponsorshipUrl, event: { keypress: function(data, event) { if (event.keyCode === 13) { $parent.addSponsorshipUrl(data); return false; } return true; } }" />
                                <span class="input-group-btn">
                                    <button class="btn btn-sm btn-success" 
                                            data-bind="click: function() { $parent.addSponsorshipUrl($data); }" 
                                            title="Add URL">
                                        <i class="ms-Icon ms-Icon--Add"></i>
                                    </button>
                                </span>
                            </div>

                            <!-- Error/Success messages -->
                            <div>
                                <div style="display: none" data-bind="visible: message">
                                    <div class="alert alert-danger">
                                        <span data-bind="text: message"></span>
                                    </div>
                                </div>
                                <div style="display: none" data-bind="visible: successMessage">
                                    <div class="alert alert-success">
                                        <span data-bind="text: successMessage"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Help text -->
                    <div class="message" style="margin-top: 10px;">
                        <strong>Supported platforms:</strong>
                        GitHub Sponsors, Patreon, Open Collective, Ko-fi, Tidelift, Liberapay
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
    <div style="display: none" data-bind="visible: searchResults().length === 0 && doneSearching()">
        <p>No packages found.</p>
    </div>
</section>

@section BottomScripts {
    <script>
        $(function () {
            'use strict';

            var viewModel = function () {
                var $self = this;

                this.searchQuery = ko.observable('');
                this.doneSearching = ko.observable(false);

                this.search = function () {
                    $self.doneSearching(false);
                    $.ajax({
                            url: '@Url.Action("Search", "PackageSponsorship", new {area = "Admin"})?query=' + encodeURIComponent($self.searchQuery()),
                            cache: false,
                            dataType: 'json',
                            success: function(data) {
                                $self.searchResults.removeAll();
                                for (var i = 0; i < data.length; i++) {
                                    // Enhance each package with sponsorship management properties
                                    var pkg = data[i];
                                    pkg.SponsorshipUrls = ko.observableArray(pkg.SponsorshipUrls || []);
                                    pkg.newSponsorshipUrl = ko.observable('');
                                    pkg.message = ko.observable('');
                                    pkg.successMessage = ko.observable('');

                                    // Clear alerts when textbox is emptied
                                    pkg.newSponsorshipUrl.subscribe(function(newValue) {
                                        if (!newValue || newValue.trim() === '') {
                                            pkg.message('');
                                            pkg.successMessage('');
                                        }
                                    });
                                }
                                $self.searchResults(data);
                            }
                        })
                        .fail(function(jqXhr, textStatus, errorThrown) {
                            alert("Error: " + errorThrown);
                        })
                        .always(function () {
                            $self.doneSearching(true);
                        });
                };

                this.generatePackageUrl = function(pkg) {
                    return '/packages/' + pkg.PackageId + '/' + pkg.PackageVersionNormalized;
                };

                // Simple add sponsorship URL function - with URL and domain validation
                this.addSponsorshipUrl = function(packageViewModel) {
                    var url = packageViewModel.newSponsorshipUrl().trim();

                    // Clear previous messages
                    packageViewModel.message('');
                    packageViewModel.successMessage('');

                    // Check if maximum number of sponsorship links (10) has been reached
                    if (packageViewModel.SponsorshipUrls().length >= 10) {
                        packageViewModel.message('You can add a maximum of 10 sponsorship links.');
                        return false;
                    }

                    // Validate that URL is not empty
                    if (!url) {
                        packageViewModel.message('Please enter a URL.');
                        return false;
                    }

                    // Ensure URL has protocol
                    if (!url.startsWith('http://') && !url.startsWith('https://')) {
                        url = 'https://' + url;
                        packageViewModel.newSponsorshipUrl(url);
                    }

                    // Validate URL format and domain
                    try {
                        var urlObj = new URL(url);
                        var hostname = urlObj.hostname.toLowerCase();
                        
                        // Check for supported sponsorship domains
                        var supportedDomains = [
                            'github.com',           // GitHub Sponsors
                            'www.github.com',
                            'patreon.com',          // Patreon
                            'www.patreon.com',
                            'opencollective.com',   // Open Collective
                            'www.opencollective.com',
                            'ko-fi.com',            // Ko-fi
                            'www.ko-fi.com',
                            'tidelift.com',         // Tidelift
                            'www.tidelift.com',
                            'liberapay.com',        // Liberapay
                            'www.liberapay.com'
                        ];
                        
                        if (supportedDomains.indexOf(hostname) === -1) {
                            packageViewModel.message('Please enter a valid URL from a supported sponsorship platform.');
                            return false;
                        }
                    } catch (e) {
                        packageViewModel.message('Please enter a valid URL from a supported sponsorship platform.');
                        return false;
                    }

                    // Add to the list and persist immediately
                    packageViewModel.SponsorshipUrls.push(url);
                    packageViewModel.newSponsorshipUrl('');
                    
                    // Save immediately
                    $self.saveAllSponsorshipUrls(packageViewModel);

                    return false;
                };

                // Simple remove sponsorship URL function
                this.removeSponsorshipUrl = function(packageViewModel, url) {
                    if (confirm('Are you sure you want to remove this sponsorship URL?')) {
                        packageViewModel.SponsorshipUrls.remove(url);
                        packageViewModel.message('');
                        
                        // Save immediately after removal
                        $self.saveAllSponsorshipUrls(packageViewModel);
                    }
                };

                this.saveAllSponsorshipUrls = function(packageViewModel) {
                    var urls = packageViewModel.SponsorshipUrls();
                    
                    $.ajax({
                        url: '@Url.Action("UpdateSponsorshipUrls", "PackageSponsorship", new {area = "Admin"})',
                        type: 'POST',
                        data: {
                            packageId: packageViewModel.PackageId,
                            urls: urls
                        },
                        traditional: true, // For array parameters
                        success: function (response) {
                            if (response.success) {
                                packageViewModel.message('');
                                packageViewModel.successMessage('URL updated successfully.');
                                
                                // Update the URLs in case they were modified server-side
                                packageViewModel.SponsorshipUrls(response.urls || []);

                                // Clear success message after 3 seconds
                                setTimeout(function() {
                                    packageViewModel.successMessage('');
                                }, 3000);
                            } else {
                                packageViewModel.successMessage('');
                                packageViewModel.message('Error: ' + (response.message || 'Failed to update sponsorship URLs'));
                            }
                        },
                        error: function () {
                            packageViewModel.successMessage('');
                            packageViewModel.message('An error occurred while updating sponsorship URLs.');
                        }
                    });
                };

                this.searchResults = ko.observableArray([]);
            };

            ko.applyBindings(new viewModel(), $('.main-container').get(0));
        });
    </script>
}
