//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGetGallery {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NuGetGallery.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account:{0} was already deleted. No action was performed..
        /// </summary>
        public static string AccountDelete_AccountAlreadyDeleted {
            get {
                return ResourceManager.GetString("AccountDelete_AccountAlreadyDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request failed to be submitted. Please try again or contact support..
        /// </summary>
        public static string AccountDelete_CreateSupportRequestFails {
            get {
                return ResourceManager.GetString("AccountDelete_CreateSupportRequestFails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An exception was encoutered while trying to delete the account:{0}. {1}.
        /// </summary>
        public static string AccountDelete_Fail {
            get {
                return ResourceManager.GetString("AccountDelete_Fail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &apos;{0}&apos; cannot be deleted because it is an organization. The organization must be manually migrated to a user account without memberships before the account can be deleted..
        /// </summary>
        public static string AccountDelete_OrganizationDeleteNotImplemented {
            get {
                return ResourceManager.GetString("AccountDelete_OrganizationDeleteNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &apos;{0}&apos; cannot be deleted because it is a member of an organization. The user needs to be manually removed from any organizations before the account can be deleted..
        /// </summary>
        public static string AccountDelete_OrganizationMemberDeleteNotImplemented {
            get {
                return ResourceManager.GetString("AccountDelete_OrganizationMemberDeleteNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account:{0} was deleted succesfully..
        /// </summary>
        public static string AccountDelete_Success {
            get {
                return ResourceManager.GetString("AccountDelete_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DeleteAccountRequest.
        /// </summary>
        public static string AccountDelete_SupportRequestTitle {
            get {
                return ResourceManager.GetString("AccountDelete_SupportRequestTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The account with the email {0} is linked to another Microsoft account.
        ///If you wish to update the linked Microsoft account you can do so from the account settings page..
        /// </summary>
        public static string AccountIsLinkedToAnotherExternalAccount {
            get {
                return ResourceManager.GetString("AccountIsLinkedToAnotherExternalAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; is already a member of this organization..
        /// </summary>
        public static string AddMember_AlreadyAMember {
            get {
                return ResourceManager.GetString("AddMember_AlreadyAMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no request for user &apos;{0}&apos; for join this organization with that token..
        /// </summary>
        public static string AddMember_MissingRequest {
            get {
                return ResourceManager.GetString("AddMember_MissingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot accept this request because you no longer meet the requirements of this organization. {0} Please contact support for more details..
        /// </summary>
        public static string AddMember_PolicyFailure {
            get {
                return ResourceManager.GetString("AddMember_PolicyFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are now a member of organization &apos;{0}&apos;..
        /// </summary>
        public static string AddMember_Success {
            get {
                return ResourceManager.GetString("AddMember_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; has not linked their account to an AAD credential matching this organization..
        /// </summary>
        public static string AddMember_UserDoesNotMeetOrganizationPolicy {
            get {
                return ResourceManager.GetString("AddMember_UserDoesNotMeetOrganizationPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; has not confirmed their email..
        /// </summary>
        public static string AddMember_UserNotConfirmed {
            get {
                return ResourceManager.GetString("AddMember_UserNotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; does not exist. .
        /// </summary>
        public static string AddMember_UserNotFound {
            get {
                return ResourceManager.GetString("AddMember_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is already an owner or pending owner of the package..
        /// </summary>
        public static string AddOwner_AlreadyOwner {
            get {
                return ResourceManager.GetString("AddOwner_AlreadyOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current user not found..
        /// </summary>
        public static string AddOwner_CurrentUserNotFound {
            get {
                return ResourceManager.GetString("AddOwner_CurrentUserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are not the package owner..
        /// </summary>
        public static string AddOwner_NotPackageOwner {
            get {
                return ResourceManager.GetString("AddOwner_NotPackageOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, &apos;{0}&apos; hasn&apos;t verified their email account yet and we cannot proceed with the request..
        /// </summary>
        public static string AddOwner_OwnerNotConfirmed {
            get {
                return ResourceManager.GetString("AddOwner_OwnerNotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner not found..
        /// </summary>
        public static string AddOwner_OwnerNotFound {
            get {
                return ResourceManager.GetString("AddOwner_OwnerNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package not found..
        /// </summary>
        public static string AddOwner_PackageNotFound {
            get {
                return ResourceManager.GetString("AddOwner_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please confirm if you would like to proceed adding &apos;{0}&apos; as a co-owner of this package..
        /// </summary>
        public static string AddOwnerConfirmation {
            get {
                return ResourceManager.GetString("AddOwnerConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; has the following requirements that will be enforced for all co-owners once the user accepts ownership of this package:
        ///{1}
        ///Note this step cannot be easily undone. If you are unsure and/or need more information, please contact &apos;{2}&apos;..
        /// </summary>
        public static string AddOwnerConfirmation_SecurePushRequiredByNewOwner {
            get {
                return ResourceManager.GetString("AddOwnerConfirmation_SecurePushRequiredByNewOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner(s) &apos;{0}&apos; has (have) the following requirements that will be enforced for user &apos;{1}&apos; once the user accepts ownership of this package:
        ///{2}
        ///Note this step cannot be easily undone. If you are unsure and/or need more information, please contact &apos;{3}&apos;..
        /// </summary>
        public static string AddOwnerConfirmation_SecurePushRequiredByOwner {
            get {
                return ResourceManager.GetString("AddOwnerConfirmation_SecurePushRequiredByOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pending owner(s) &apos;{0}&apos; has (have) the following requirements that will be enforced for all co-owners, including &apos;{1}&apos;, once ownership requests are accepted:
        ///{2}
        ///Note this step cannot be easily undone. If you are unsure and/or need more information, please contact &apos;{3}&apos;..
        /// </summary>
        public static string AddOwnerConfirmation_SecurePushRequiredByPendingOwner {
            get {
                return ResourceManager.GetString("AddOwnerConfirmation_SecurePushRequiredByPendingOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner(s) &apos;{0}&apos; has (have) the following requirements that are now enforced for co-owner(s) &apos;{1}&apos;:
        ///
        ///{2}
        ///
        ///For more information, please contact &apos;{3}&apos;..
        /// </summary>
        public static string AddOwnerNotification_SecurePushRequired_Propagators {
            get {
                return ResourceManager.GetString("AddOwnerNotification_SecurePushRequired_Propagators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner(s) &apos;{0}&apos; has (have) the following requirements that are now enforced for your account:
        ///
        ///{1}
        ///
        ///For more information, please contact &apos;{2}&apos;..
        /// </summary>
        public static string AddOwnerNotification_SecurePushRequired_Subscribed {
            get {
                return ResourceManager.GetString("AddOwnerNotification_SecurePushRequired_Subscribed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: The following policies will be enforced on package co-owners once you accept this request. If you are unsure and/or need more information, please contact &apos;{0}&apos;.
        ///
        ///{1}.
        /// </summary>
        public static string AddOwnerRequest_SecurePushRequiredByNewOwner {
            get {
                return ResourceManager.GetString("AddOwnerRequest_SecurePushRequiredByNewOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Owner(s) &apos;{0}&apos; has (have) the following policies that will be enforced on your account once you accept this request. If you are unsure and/or need more information, please contact &apos;{1}&apos;.
        ///
        ///{2}.
        /// </summary>
        public static string AddOwnerRequest_SecurePushRequiredByOwner {
            get {
                return ResourceManager.GetString("AddOwnerRequest_SecurePushRequiredByOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: Pending owner(s) &apos;{0}&apos; has (have) the following policies that will be enforced on your account once ownership requests are accepted. If you are unsure and/or need more information, please contact &apos;{1}&apos;.
        ///
        ///{2}.
        /// </summary>
        public static string AddOwnerRequest_SecurePushRequiredByPendingOwner {
            get {
                return ResourceManager.GetString("AddOwnerRequest_SecurePushRequiredByPendingOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are already signed in!.
        /// </summary>
        public static string AlreadyLoggedIn {
            get {
                return ResourceManager.GetString("AlreadyLoggedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a minute.
        /// </summary>
        public static string AMinute {
            get {
                return ResourceManager.GetString("AMinute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key can not be the default Guid..
        /// </summary>
        public static string ApiKeyCanNotBeDefaultGuid {
            get {
                return ResourceManager.GetString("ApiKeyCanNotBeDefaultGuid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t generate an API key without a description..
        /// </summary>
        public static string ApiKeyDescriptionRequired {
            get {
                return ResourceManager.GetString("ApiKeyDescriptionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new API key has been generated. Check below and make sure to copy the value, as now is the only time it will be visible..
        /// </summary>
        public static string ApiKeyGenerated {
            get {
                return ResourceManager.GetString("ApiKeyGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified API key is invalid, has expired, or does not have permission to access the specified package..
        /// </summary>
        public static string ApiKeyNotAuthorized {
            get {
                return ResourceManager.GetString("ApiKeyNotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must specify a package owner to generate an API key..
        /// </summary>
        public static string ApiKeyOwnerRequired {
            get {
                return ResourceManager.GetString("ApiKeyOwnerRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified API key is scoped to an owner that is unconfirmed. You must confirm the owner that this API key is scoped to before you can use it..
        /// </summary>
        public static string ApiKeyOwnerUnconfirmed {
            get {
                return ResourceManager.GetString("ApiKeyOwnerUnconfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An API key must be provided in the &apos;X-NuGet-ApiKey&apos; header to use this service.
        /// </summary>
        public static string ApiKeyRequired {
            get {
                return ResourceManager.GetString("ApiKeyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current user does not have permission to create an ApiKey with the specified owner or scopes..
        /// </summary>
        public static string ApiKeyScopesNotAllowed {
            get {
                return ResourceManager.GetString("ApiKeyScopesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must confirm the email address for the account in order to use the API key..
        /// </summary>
        public static string ApiKeyUserAccountIsUnconfirmed {
            get {
                return ResourceManager.GetString("ApiKeyUserAccountIsUnconfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; authentication provider is disabled and cannot be used to authenticate
        ///.
        /// </summary>
        public static string AuthenticationProviderDisabled {
            get {
                return ResourceManager.GetString("AuthenticationProviderDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Azure Active Directory account.
        /// </summary>
        public static string AzureActiveDirectory_AccountNoun {
            get {
                return ResourceManager.GetString("AzureActiveDirectory_AccountNoun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register with Azure Active Directory.
        /// </summary>
        public static string AzureActiveDirectory_RegisterMessage {
            get {
                return ResourceManager.GetString("AzureActiveDirectory_RegisterMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign in with Azure Active Directory.
        /// </summary>
        public static string AzureActiveDirectory_SignInMessage {
            get {
                return ResourceManager.GetString("AzureActiveDirectory_SignInMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The pending organization member was deleted..
        /// </summary>
        public static string CancelMemberRequest_Success {
            get {
                return ResourceManager.GetString("CancelMemberRequest_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no request for user &apos;{0}&apos; to join this organization..
        /// </summary>
        public static string CancelMembershipRequest_MissingRequest {
            get {
                return ResourceManager.GetString("CancelMembershipRequest_MissingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enqueuing unavailable: the gallery is currently in read only mode, with limited service. Please try again later..
        /// </summary>
        public static string CannotEnqueueDueToReadOnly {
            get {
                return ResourceManager.GetString("CannotEnqueueDueToReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oops! You can&apos;t remove the only credential that can be used to sign in to the website!.
        /// </summary>
        public static string CannotRemoveOnlyLoginCredential {
            get {
                return ResourceManager.GetString("CannotRemoveOnlyLoginCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update the Microsoft account with &apos;{0}&apos;. This could happen if it is already linked to another NuGet account. Contact support for more information..
        /// </summary>
        public static string ChangeCredential_Failed {
            get {
                return ResourceManager.GetString("ChangeCredential_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The change of Azure active directory account is not allowed by your organization(s): {0}. Please leave these organization(s) to change your login..
        /// </summary>
        public static string ChangeCredential_NotAllowed {
            get {
                return ResourceManager.GetString("ChangeCredential_NotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid external provider found for authentication.
        /// </summary>
        public static string ChangeCredential_ProviderNotFound {
            get {
                return ResourceManager.GetString("ChangeCredential_ProviderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully linked the Microsoft account ({0})..
        /// </summary>
        public static string ChangeCredential_Success {
            get {
                return ResourceManager.GetString("ChangeCredential_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully linked the Microsoft account ({0}). Note that the email address associated with the new linked Microsoft account is different than the NuGet.org account email ({1})..
        /// </summary>
        public static string ChangeCredential_SuccessDifferentEmail {
            get {
                return ResourceManager.GetString("ChangeCredential_SuccessDifferentEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SKIPPED! Package file blob {0} already exists.
        /// </summary>
        public static string CopyExternalPackages_PackageFileBlobAlreadyExists {
            get {
                return ResourceManager.GetString("CopyExternalPackages_PackageFileBlobAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving the package file {0} to blob storage as {1}.
        /// </summary>
        public static string CopyExternalPackages_SavingPackageFileBlob {
            get {
                return ResourceManager.GetString("CopyExternalPackages_SavingPackageFileBlob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find anyone with that username or email..
        /// </summary>
        public static string CouldNotFindAnyoneWithThatUsernameOrEmail {
            get {
                return ResourceManager.GetString("CouldNotFindAnyoneWithThatUsernameOrEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The credential has been expired..
        /// </summary>
        public static string CredentialExpired {
            get {
                return ResourceManager.GetString("CredentialExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credential not found..
        /// </summary>
        public static string CredentialNotFound {
            get {
                return ResourceManager.GetString("CredentialNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The credential has been removed..
        /// </summary>
        public static string CredentialRemoved {
            get {
                return ResourceManager.GetString("CredentialRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key.
        /// </summary>
        public static string CredentialType_ApiKey {
            get {
                return ResourceManager.GetString("CredentialType_ApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string CredentialType_Password {
            get {
                return ResourceManager.GetString("CredentialType_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current password you provided is incorrect..
        /// </summary>
        public static string CurrentPasswordIncorrect {
            get {
                return ResourceManager.GetString("CurrentPasswordIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NuGet service is experiencing a service interruption. Try requesting a specific package version instead..
        /// </summary>
        public static string DatabaseUnavailable_TrySpecificVersion {
            get {
                return ResourceManager.GetString("DatabaseUnavailable_TrySpecificVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred. Contact support for assistance..
        /// </summary>
        public static string DefaultUserSafeExceptionMessage {
            get {
                return ResourceManager.GetString("DefaultUserSafeExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization member &apos;{0}&apos; is the last administrator and cannot be deleted..
        /// </summary>
        public static string DeleteMember_CannotDeleteLastAdmin {
            get {
                return ResourceManager.GetString("DeleteMember_CannotDeleteLastAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t leave the organization. In order to leave the organization, another collaborator must be assigned as an administrator..
        /// </summary>
        public static string DeleteMember_CannotRemoveLastAdmin {
            get {
                return ResourceManager.GetString("DeleteMember_CannotRemoveLastAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The organization member was deleted..
        /// </summary>
        public static string DeleteMember_Success {
            get {
                return ResourceManager.GetString("DeleteMember_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner(s) &apos;{0}&apos; require(s) that all co-owners use client version {1} or higher to push all of their packages. For more information, contact {2}.
        ///.
        /// </summary>
        public static string DisplayPackage_SecurePushRequired {
            get {
                return ResourceManager.GetString("DisplayPackage_SecurePushRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email address &apos;{0}&apos; is being used..
        /// </summary>
        public static string EmailAddressBeingUsed {
            get {
                return ResourceManager.GetString("EmailAddressBeingUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key &apos;{0}&apos; was added to your account and can now be used. If you did not request this change, please reply to this email to contact support..
        /// </summary>
        public static string Emails_ApiKeyAdded_Body {
            get {
                return ResourceManager.GetString("Emails_ApiKeyAdded_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API key &apos;{0}&apos; was removed from your account and can no longer be used. If you did not request this change, please reply to this email to contact support..
        /// </summary>
        public static string Emails_ApiKeyRemoved_Body {
            get {
                return ResourceManager.GetString("Emails_ApiKeyRemoved_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} was added to your account and can now be used to sign in. If you did not request this change, please reply to this email to contact support..
        /// </summary>
        public static string Emails_CredentialAdded_Body {
            get {
                return ResourceManager.GetString("Emails_CredentialAdded_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] {1} added to your account.
        /// </summary>
        public static string Emails_CredentialAdded_Subject {
            get {
                return ResourceManager.GetString("Emails_CredentialAdded_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A {0} was removed from your account and can no longer be used to sign in. If you did not request this change, please reply to this email to contact support..
        /// </summary>
        public static string Emails_CredentialRemoved_Body {
            get {
                return ResourceManager.GetString("Emails_CredentialRemoved_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] {1} removed from your account.
        /// </summary>
        public static string Emails_CredentialRemoved_Subject {
            get {
                return ResourceManager.GetString("Emails_CredentialRemoved_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The word on the street is you lost your password. Sorry to hear it!
        ///If you haven&apos;t forgotten your password you can safely ignore this email. Your password has not been changed.
        ///
        ///Click the following link within the next hour to reset your password:
        ///
        ///[{0}]({0})
        ///
        ///Note that NuGet.org password login is deprecated. Please use Microsoft account to sign into {1}.
        ///
        ///Thanks,
        ///The {1} Team.
        /// </summary>
        public static string Emails_ForgotPassword_Body {
            get {
                return ResourceManager.GetString("Emails_ForgotPassword_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Please reset your password..
        /// </summary>
        public static string Emails_ForgotPassword_Subject {
            get {
                return ResourceManager.GetString("Emails_ForgotPassword_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The word on the street is you want to set a password for your account.
        ///If you didn&apos;t request a password, you can safely ignore this message. A password has not yet been set.
        ///
        ///Click the following link within the next hour to set your password:
        ///
        ///[{0}]({0})
        ///
        ///Note that NuGet.org password login is deprecated. Please use Microsoft account to sign into {1}.
        ///
        ///Thanks,
        ///The {1} Team.
        /// </summary>
        public static string Emails_SetPassword_Body {
            get {
                return ResourceManager.GetString("Emails_SetPassword_Body", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [{0}] Please set your password..
        /// </summary>
        public static string Emails_SetPassword_Subject {
            get {
                return ResourceManager.GetString("Emails_SetPassword_Subject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error in sending mail : {0}.
        /// </summary>
        public static string ErrorInSendingMail {
            get {
                return ResourceManager.GetString("ErrorInSendingMail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your account credential expired or you did not allow us access to your account. Try logging in again..
        /// </summary>
        public static string ExternalAccountLinkExpired {
            get {
                return ResourceManager.GetString("ExternalAccountLinkExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read the package file. Ensure it is a valid NuGet package with a valid manifest..
        /// </summary>
        public static string FailedToReadUploadFile {
            get {
                return ResourceManager.GetString("FailedToReadUploadFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API key &apos;{0}&apos; is invalid..
        /// </summary>
        public static string InvalidApiKey {
            get {
                return ResourceManager.GetString("InvalidApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Password Reset Token is not valid or expired..
        /// </summary>
        public static string InvalidOrExpiredPasswordResetToken {
            get {
                return ResourceManager.GetString("InvalidOrExpiredPasswordResetToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package framework &apos;{0}&apos; is not supported. Frameworks within the portable profile are not allowed to have profiles themselves..
        /// </summary>
        public static string InvalidPortableFramework {
            get {
                return ResourceManager.GetString("InvalidPortableFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job Log Blob name is invalid Bob! Expected [jobname].[yyyy-MM-dd].json or [jobname].json. Got: {0}.
        /// </summary>
        public static string JobLogBlobNameInvalid {
            get {
                return ResourceManager.GetString("JobLogBlobNameInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is already an owner or pending owner of this package..
        /// </summary>
        public static string ManagePackageOwners_AlreadyPending {
            get {
                return ResourceManager.GetString("ManagePackageOwners_AlreadyPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred: {0}.
        /// </summary>
        public static string ManagePackageOwners_Error {
            get {
                return ResourceManager.GetString("ManagePackageOwners_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid user name..
        /// </summary>
        public static string ManagePackageOwners_InvalidUsername {
            get {
                return ResourceManager.GetString("ManagePackageOwners_InvalidUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove your organization as an owner of this package?.
        /// </summary>
        public static string ManagePackageOwners_RemovingOrganization {
            get {
                return ResourceManager.GetString("ManagePackageOwners_RemovingOrganization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You will no longer be able to manage the package if you do..
        /// </summary>
        public static string ManagePackageOwners_RemovingOwnership {
            get {
                return ResourceManager.GetString("ManagePackageOwners_RemovingOwnership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove yourself as an owner of this package?.
        /// </summary>
        public static string ManagePackageOwners_RemovingSelf {
            get {
                return ResourceManager.GetString("ManagePackageOwners_RemovingSelf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your organization must be confirmed before you can change its membership..
        /// </summary>
        public static string Member_OrganizationUnconfirmed {
            get {
                return ResourceManager.GetString("Member_OrganizationUnconfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a message..
        /// </summary>
        public static string MessageIsRequired {
            get {
                return ResourceManager.GetString("MessageIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send added/removed email for credentials of type &apos;{0}&apos;.
        /// </summary>
        public static string MessageService_CannotSendEmailForCredential {
            get {
                return ResourceManager.GetString("MessageService_CannotSendEmailForCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft account.
        /// </summary>
        public static string MicrosoftAccount_AccountNoun {
            get {
                return ResourceManager.GetString("MicrosoftAccount_AccountNoun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sign in with Microsoft.
        /// </summary>
        public static string MicrosoftAccount_SignInMessage {
            get {
                return ResourceManager.GetString("MicrosoftAccount_SignInMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} minutes.
        /// </summary>
        public static string Minutes {
            get {
                return ResourceManager.GetString("Minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing required configuration value: &apos;{0}&apos;.
        /// </summary>
        public static string MissingRequiredConfigurationValue {
            get {
                return ResourceManager.GetString("MissingRequiredConfigurationValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Credentials match &apos;{0}&apos; credential with Key {1}.
        /// </summary>
        public static string MultipleMatchingCredentials {
            get {
                return ResourceManager.GetString("MultipleMatchingCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID of your package, &apos;{0}&apos;, is similar to the title of an existing package, which can cause confusion with our users. Please modify the ID of your package and try uploading again..
        /// </summary>
        public static string NewRegistrationIdMatchesExistingPackageTitle {
            get {
                return ResourceManager.GetString("NewRegistrationIdMatchesExistingPackageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full access API key.
        /// </summary>
        public static string NonScopedApiKeyDescription {
            get {
                return ResourceManager.GetString("NonScopedApiKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A nuget package&apos;s {0} property is required..
        /// </summary>
        public static string NuGetPackagePropertyMissing {
            get {
                return ResourceManager.GetString("NuGetPackagePropertyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A nuget package&apos;s {0} property may not be more than {1} characters long..
        /// </summary>
        public static string NuGetPackagePropertyTooLong {
            get {
                return ResourceManager.GetString("NuGetPackagePropertyTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully confirmed the organization email address..
        /// </summary>
        public static string OrganizationEmailConfirmed {
            get {
                return ResourceManager.GetString("OrganizationEmailConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The organization email preferences have been updated..
        /// </summary>
        public static string OrganizationEmailPreferencesUpdated {
            get {
                return ResourceManager.GetString("OrganizationEmailPreferencesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You canceled your organization email address change request..
        /// </summary>
        public static string OrganizationEmailUpdateCancelled {
            get {
                return ResourceManager.GetString("OrganizationEmailUpdateCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Member name is required..
        /// </summary>
        public static string OrganizationMemberNameIsRequired {
            get {
                return ResourceManager.GetString("OrganizationMemberNameIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator account &apos;{0}&apos; is not linked to an AAD credential with an organization tenant..
        /// </summary>
        public static string Organizations_AdminAccountDoesNotHaveTenant {
            get {
                return ResourceManager.GetString("Organizations_AdminAccountDoesNotHaveTenant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization accounts cannot create credentials..
        /// </summary>
        public static string OrganizationsCannotCreateCredentials {
            get {
                return ResourceManager.GetString("OrganizationsCannotCreateCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owner Support Request for &apos;{0}&apos; version {1}.
        /// </summary>
        public static string OwnerSupportRequestSubjectFormat {
            get {
                return ResourceManager.GetString("OwnerSupportRequestSubjectFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package created from API..
        /// </summary>
        public static string PackageCreatedFromApi {
            get {
                return ResourceManager.GetString("PackageCreatedFromApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is invalid and cannot be uploaded. One or more files, such as &apos;{0}&apos; have a date in the future..
        /// </summary>
        public static string PackageEntryFromTheFuture {
            get {
                return ResourceManager.GetString("PackageEntryFromTheFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package with ID &apos;{0}&apos; and version &apos;{1}&apos; already exists and cannot be modified..
        /// </summary>
        public static string PackageExistsAndCannotBeModified {
            get {
                return ResourceManager.GetString("PackageExistsAndCannotBeModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package ID &apos;{0}&apos; is not available..
        /// </summary>
        public static string PackageIdNotAvailable {
            get {
                return ResourceManager.GetString("PackageIdNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package is already curated..
        /// </summary>
        public static string PackageIsAlreadyCurated {
            get {
                return ResourceManager.GetString("PackageIsAlreadyCurated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package &apos;{0}&apos; has been locked. This means you cannot publish a new version or change the listing status of a published package version. Please contact support@nuget.org..
        /// </summary>
        public static string PackageIsLocked {
            get {
                return ResourceManager.GetString("PackageIsLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package versions that differ only by metadata cannot be uploaded. A package with ID &apos;{0}&apos; and version &apos;{1}&apos; already exists and cannot be modified..
        /// </summary>
        public static string PackageVersionDiffersOnlyByMetadataAndCannotBeModified {
            get {
                return ResourceManager.GetString("PackageVersionDiffersOnlyByMetadataAndCannotBeModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package with ID &apos;{0}&apos; and version &apos;{1}&apos; does not exist..
        /// </summary>
        public static string PackageWithIdAndVersionNotFound {
            get {
                return ResourceManager.GetString("PackageWithIdAndVersionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No package with this ID exists..
        /// </summary>
        public static string PackageWithIdDoesNotExist {
            get {
                return ResourceManager.GetString("PackageWithIdDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; cannot be null or an empty string.
        /// </summary>
        public static string ParameterCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ParameterCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password has been changed..
        /// </summary>
        public static string PasswordChanged {
            get {
                return ResourceManager.GetString("PasswordChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password credentials cannot be used with Authenticate(Credential). Use Authenticate(string, string) instead..
        /// </summary>
        public static string PasswordCredentialsCannotBeUsedHere {
            get {
                return ResourceManager.GetString("PasswordCredentialsCannotBeUsedHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new password does not match the verify password field..
        /// </summary>
        public static string PasswordDoesNotMatch {
            get {
                return ResourceManager.GetString("PasswordDoesNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password login is deprecated. You must use Microsoft account to sign in..
        /// </summary>
        public static string PasswordLoginDeprecated {
            get {
                return ResourceManager.GetString("PasswordLoginDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password has been removed..
        /// </summary>
        public static string PasswordRemoved {
            get {
                return ResourceManager.GetString("PasswordRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your password has been set..
        /// </summary>
        public static string PasswordSet {
            get {
                return ResourceManager.GetString("PasswordSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conversion of Markdown to HTML failed with &apos;{0}&apos;..
        /// </summary>
        public static string PreviewReadMe_ConversionFailed {
            get {
                return ResourceManager.GetString("PreviewReadMe_ConversionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no Markdown Documentation available to preview..
        /// </summary>
        public static string PreviewReadMe_ReadMeMissing {
            get {
                return ResourceManager.GetString("PreviewReadMe_ReadMeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid Markdown Documentation source type..
        /// </summary>
        public static string ReadMeInvalidSourceType {
            get {
                return ResourceManager.GetString("ReadMeInvalidSourceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Markdown Documentation file must be less than {0} bytes..
        /// </summary>
        public static string ReadMeMaxLengthExceeded {
            get {
                return ResourceManager.GetString("ReadMeMaxLengthExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Documentation file must end with a Markdown extension &apos;{0}&apos;..
        /// </summary>
        public static string ReadMePostedFileExtensionInvalid {
            get {
                return ResourceManager.GetString("ReadMePostedFileExtensionInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Documentation URL must be a raw Markdown file hosted on GitHub..
        /// </summary>
        public static string ReadMeUrlHostInvalid {
            get {
                return ResourceManager.GetString("ReadMeUrlHostInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no request for user &apos;{0}&apos; for join this organization with that token..
        /// </summary>
        public static string RejectMembershipRequest_NotFound {
            get {
                return ResourceManager.GetString("RejectMembershipRequest_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; does not have permission to remove the owner &apos;{1}&apos;..
        /// </summary>
        public static string RemoveOwner_NotAllowed {
            get {
                return ResourceManager.GetString("RemoveOwner_NotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is not an owner or pending owner of the package..
        /// </summary>
        public static string RemoveOwner_NotOwner {
            get {
                return ResourceManager.GetString("RemoveOwner_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The namespace &apos;{0}&apos; contains invalid characters. Examples of valid namespaces include &apos;MyNamespace&apos; and &apos;MyNamespace.&apos;..
        /// </summary>
        public static string ReservedNamespace_InvalidCharactersInNamespace {
            get {
                return ResourceManager.GetString("ReservedNamespace_InvalidCharactersInNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid namespace specified.
        /// </summary>
        public static string ReservedNamespace_InvalidNamespace {
            get {
                return ResourceManager.GetString("ReservedNamespace_InvalidNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid or null username specified..
        /// </summary>
        public static string ReservedNamespace_InvalidUsername {
            get {
                return ResourceManager.GetString("ReservedNamespace_InvalidUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace must not exceed {0} characters..
        /// </summary>
        public static string ReservedNamespace_NamespaceExceedsLength {
            get {
                return ResourceManager.GetString("ReservedNamespace_NamespaceExceedsLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified namespace is already reserved or is a more liberal namespace..
        /// </summary>
        public static string ReservedNamespace_NamespaceNotAvailable {
            get {
                return ResourceManager.GetString("ReservedNamespace_NamespaceNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespace &apos;{0}&apos; not found..
        /// </summary>
        public static string ReservedNamespace_NamespaceNotFound {
            get {
                return ResourceManager.GetString("ReservedNamespace_NamespaceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is now an owner of the prefix &apos;{1}&apos;..
        /// </summary>
        public static string ReservedNamespace_OwnerAdded {
            get {
                return ResourceManager.GetString("ReservedNamespace_OwnerAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; was removed from owners list of prefix &apos;{1}&apos;..
        /// </summary>
        public static string ReservedNamespace_OwnerRemoved {
            get {
                return ResourceManager.GetString("ReservedNamespace_OwnerRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The prefix &apos;{0}&apos; has been reserved..
        /// </summary>
        public static string ReservedNamespace_PrefixAdded {
            get {
                return ResourceManager.GetString("ReservedNamespace_PrefixAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The prefix &apos;{0}&apos; has been deleted..
        /// </summary>
        public static string ReservedNamespace_PrefixRemoved {
            get {
                return ResourceManager.GetString("ReservedNamespace_PrefixRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package registraton Id &apos;{0}&apos; is missing or not found in the reserved namespace &apos;{1}&apos;..
        /// </summary>
        public static string ReservedNamespace_RegistrationNotFound {
            get {
                return ResourceManager.GetString("ReservedNamespace_RegistrationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ID prefix of this package has been reserved for one of the owners of this package by NuGet.org..
        /// </summary>
        public static string ReservedNamespace_ReservedIndicatorTooltip {
            get {
                return ResourceManager.GetString("ReservedNamespace_ReservedIndicatorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; is already an owner of the specified namespace..
        /// </summary>
        public static string ReservedNamespace_UserAlreadyOwner {
            get {
                return ResourceManager.GetString("ReservedNamespace_UserAlreadyOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; is not an owner of the specified namespace.
        /// </summary>
        public static string ReservedNamespace_UserNotAnOwner {
            get {
                return ResourceManager.GetString("ReservedNamespace_UserNotAnOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User not found with username &apos;{0}&apos;.
        /// </summary>
        public static string ReservedNamespace_UserNotFound {
            get {
                return ResourceManager.GetString("ReservedNamespace_UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string ScopeDescription_All {
            get {
                return ResourceManager.GetString("ScopeDescription_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push new packages and package versions.
        /// </summary>
        public static string ScopeDescription_PushPackage {
            get {
                return ResourceManager.GetString("ScopeDescription_PushPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Push only new package versions.
        /// </summary>
        public static string ScopeDescription_PushPackageVersion {
            get {
                return ResourceManager.GetString("ScopeDescription_PushPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string ScopeDescription_Unknown {
            get {
                return ResourceManager.GetString("ScopeDescription_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlist package.
        /// </summary>
        public static string ScopeDescription_UnlistPackage {
            get {
                return ResourceManager.GetString("ScopeDescription_UnlistPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Verify package ownership.
        /// </summary>
        public static string ScopeDescription_VerifyPackage {
            get {
                return ResourceManager.GetString("ScopeDescription_VerifyPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package verification key is required to push symbols. Please contact support@nuget.org to get more details..
        /// </summary>
        public static string SecurityPolicy_RequireApiKeyWithPackageVerifyScope {
            get {
                return ResourceManager.GetString("SecurityPolicy_RequireApiKeyWithPackageVerifyScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A client version &apos;{0}&apos; or higher is required to be able to push packages. Please contact support@nuget.org to get more details..
        /// </summary>
        public static string SecurityPolicy_RequireMinProtocolVersionForPush {
            get {
                return ResourceManager.GetString("SecurityPolicy_RequireMinProtocolVersionForPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email address you provided does not match with the email address linked to the account.
        /// </summary>
        public static string SigninAssistance_EmailMismatched {
            get {
                return ResourceManager.GetString("SigninAssistance_EmailMismatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid email address.
        /// </summary>
        public static string SigninAssistance_InvalidEmail {
            get {
                return ResourceManager.GetString("SigninAssistance_InvalidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter a valid username.
        /// </summary>
        public static string SigninAssistance_InvalidUser {
            get {
                return ResourceManager.GetString("SigninAssistance_InvalidUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested resource can only be accessed via SSL..
        /// </summary>
        public static string SSLRequired {
            get {
                return ResourceManager.GetString("SSLRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You successfully uploaded {0} {1}..
        /// </summary>
        public static string SuccessfullyUploadedPackage {
            get {
                return ResourceManager.GetString("SuccessfullyUploadedPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your support request has been sent to the gallery operators..
        /// </summary>
        public static string SupportRequestSentTransientMessage {
            get {
                return ResourceManager.GetString("SupportRequestSentTransientMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The title of your package, &apos;{0}&apos;, is similar to the ID of an existing package, which can cause confusion with our users. Please modify the title of your package and try uploading again..
        /// </summary>
        public static string TitleMatchesExistingRegistration {
            get {
                return ResourceManager.GetString("TitleMatchesExistingRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Token expiration should give the user at least a minute to change their password.
        /// </summary>
        public static string TokenExpirationShouldGiveUser1MinuteToChangePassword {
            get {
                return ResourceManager.GetString("TokenExpirationShouldGiveUser1MinuteToChangePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are a member of one or more organizations. You must leave all organizations before transforming your account..
        /// </summary>
        public static string TransformAccount_AccountHasMemberships {
            get {
                return ResourceManager.GetString("TransformAccount_AccountHasMemberships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &apos;{0}&apos; is already an organization..
        /// </summary>
        public static string TransformAccount_AccountIsAnOrganization {
            get {
                return ResourceManager.GetString("TransformAccount_AccountIsAnOrganization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &apos;{0}&apos; should be a confirmed user..
        /// </summary>
        public static string TransformAccount_AccountNotConfirmed {
            get {
                return ResourceManager.GetString("TransformAccount_AccountNotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator account &apos;{0}&apos; does not exist..
        /// </summary>
        public static string TransformAccount_AdminAccountDoesNotExist {
            get {
                return ResourceManager.GetString("TransformAccount_AdminAccountDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator account &apos;{0}&apos; cannot be an organization..
        /// </summary>
        public static string TransformAccount_AdminAccountIsOrganization {
            get {
                return ResourceManager.GetString("TransformAccount_AdminAccountIsOrganization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator account &apos;{0}&apos; has not confirmed their email address..
        /// </summary>
        public static string TransformAccount_AdminAccountNotConfirmed {
            get {
                return ResourceManager.GetString("TransformAccount_AdminAccountNotConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator account &apos;{0}&apos; cannot be the same account as the one being transformed..
        /// </summary>
        public static string TransformAccount_AdminMustBeDifferentAccount {
            get {
                return ResourceManager.GetString("TransformAccount_AdminMustBeDifferentAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transform request for your account has been successfully cancelled..
        /// </summary>
        public static string TransformAccount_Cancelled {
            get {
                return ResourceManager.GetString("TransformAccount_Cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error occurred while transforming this account. Contact support for assistance..
        /// </summary>
        public static string TransformAccount_Failed {
            get {
                return ResourceManager.GetString("TransformAccount_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transform request you are attempting to cancel was not found..
        /// </summary>
        public static string TransformAccount_FailedMissingRequestToCancel {
            get {
                return ResourceManager.GetString("TransformAccount_FailedMissingRequestToCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization account &apos;{0}&apos; does not exist..
        /// </summary>
        public static string TransformAccount_OrganizationAccountDoesNotExist {
            get {
                return ResourceManager.GetString("TransformAccount_OrganizationAccountDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transform request for you to become an admin of &apos;{0}&apos; has been successfully cancelled..
        /// </summary>
        public static string TransformAccount_Rejected {
            get {
                return ResourceManager.GetString("TransformAccount_Rejected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A transform request, with account &apos;{0}&apos; as administrator, is in progress. A new request will override any existing request(s)..
        /// </summary>
        public static string TransformAccount_RequestExists {
            get {
                return ResourceManager.GetString("TransformAccount_RequestExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please sign in as administrator &apos;{0}&apos; to finish transforming account &apos;{1}&apos; into an organization..
        /// </summary>
        public static string TransformAccount_SignInToConfirm {
            get {
                return ResourceManager.GetString("TransformAccount_SignInToConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account &apos;{0}&apos; was successfully transformed into an organization..
        /// </summary>
        public static string TransformAccount_Success {
            get {
                return ResourceManager.GetString("TransformAccount_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User is not authorized.
        /// </summary>
        public static string Unauthorized {
            get {
                return ResourceManager.GetString("Unauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown authentication provider: &apos;{0}&apos;.
        /// </summary>
        public static string UnknownAuthenticationProvider {
            get {
                return ResourceManager.GetString("UnknownAuthenticationProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported.
        /// </summary>
        public static string Unsupported {
            get {
                return ResourceManager.GetString("Unsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can&apos;t change your role to collaborator. In order to change, another collaborator must be assigned as an administrator..
        /// </summary>
        public static string UpdateMember_CannotRemoveLastAdmin {
            get {
                return ResourceManager.GetString("UpdateMember_CannotRemoveLastAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Organization member &apos;{0}&apos; was not found..
        /// </summary>
        public static string UpdateOrDeleteMember_MemberNotFound {
            get {
                return ResourceManager.GetString("UpdateOrDeleteMember_MemberNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A package file is required..
        /// </summary>
        public static string UploadFileIsRequired {
            get {
                return ResourceManager.GetString("UploadFileIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file must be a .nupkg file..
        /// </summary>
        public static string UploadFileMustBeNuGetPackage {
            get {
                return ResourceManager.GetString("UploadFileMustBeNuGetPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package ID has been reserved. Please request access to upload to this reserved namespace from the owner of the reserved prefix, or re-upload the package with a different ID..
        /// </summary>
        public static string UploadPackage_IdNamespaceConflict {
            get {
                return ResourceManager.GetString("UploadPackage_IdNamespaceConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a conflict with the ID and version of your package and another package. Please change your package&apos;s ID or version and try again..
        /// </summary>
        public static string UploadPackage_IdVersionConflict {
            get {
                return ResourceManager.GetString("UploadPackage_IdVersionConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NuGet package contains an invalid .nuspec file. The error encountered was: &apos;{0}&apos;. Correct the error and try again..
        /// </summary>
        public static string UploadPackage_InvalidNuspec {
            get {
                return ResourceManager.GetString("UploadPackage_InvalidNuspec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NuGet package contains an invalid .nuspec file. The errors encountered were: &apos;{0}&apos;. Correct the errors and try again..
        /// </summary>
        public static string UploadPackage_InvalidNuspecMultiple {
            get {
                return ResourceManager.GetString("UploadPackage_InvalidNuspecMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NuGet package is invalid. The error encountered was:&apos;{0}&apos;. Correct the error and try again..
        /// </summary>
        public static string UploadPackage_InvalidPackage {
            get {
                return ResourceManager.GetString("UploadPackage_InvalidPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package requires version &apos;{0}&apos; of NuGet, which this gallery does not currently support. Please contact us if you have questions..
        /// </summary>
        public static string UploadPackage_MinClientVersionOutOfRange {
            get {
                return ResourceManager.GetString("UploadPackage_MinClientVersionOutOfRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; does not have the rights to upload a package with a new ID on behalf of user &apos;{1}&apos;..
        /// </summary>
        public static string UploadPackage_NewIdOnBehalfOfUserNotAllowed {
            get {
                return ResourceManager.GetString("UploadPackage_NewIdOnBehalfOfUserNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; does not have the rights to upload a new version of an existing package on behalf of user &apos;{1}&apos;..
        /// </summary>
        public static string UploadPackage_NewVersionOnBehalfOfUserNotAllowed {
            get {
                return ResourceManager.GetString("UploadPackage_NewVersionOnBehalfOfUserNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot upload file because an upload is already in progress..
        /// </summary>
        public static string UploadPackage_UploadInProgress {
            get {
                return ResourceManager.GetString("UploadPackage_UploadInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your account was locked after too many unsuccessful sign-in attempts. Please try again in {0}..
        /// </summary>
        public static string UserAccountLocked {
            get {
                return ResourceManager.GetString("UserAccountLocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have successfully confirmed your email address!.
        /// </summary>
        public static string UserEmailConfirmed {
            get {
                return ResourceManager.GetString("UserEmailConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your email preferences have been updated..
        /// </summary>
        public static string UserEmailPreferencesUpdated {
            get {
                return ResourceManager.GetString("UserEmailPreferencesUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You canceled your email address change request..
        /// </summary>
        public static string UserEmailUpdateCancelled {
            get {
                return ResourceManager.GetString("UserEmailUpdateCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot reset your password until you confirm your account..
        /// </summary>
        public static string UserIsNotYetConfirmed {
            get {
                return ResourceManager.GetString("UserIsNotYetConfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user key is required..
        /// </summary>
        public static string UserKeyIsRequired {
            get {
                return ResourceManager.GetString("UserKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A unique user with that username or email address and password does not exist. Try logging on with your username if you were using an email address to log on..
        /// </summary>
        public static string UsernameAndPasswordNotFound {
            get {
                return ResourceManager.GetString("UsernameAndPasswordNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username &apos;{0}&apos; is not available..
        /// </summary>
        public static string UsernameNotAvailable {
            get {
                return ResourceManager.GetString("UsernameNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A user with the provided user name does not exist..
        /// </summary>
        public static string UserNotFound {
            get {
                return ResourceManager.GetString("UserNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We&apos;re performing the package delete right now. It may take a while for this change to propagate through our system..
        /// </summary>
        public static string UserPackageDeleteCompleteTransientMessage {
            get {
                return ResourceManager.GetString("UserPackageDeleteCompleteTransientMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must confirm the package deletion request..
        /// </summary>
        public static string UserPackageDeleteConfirmationIsRequired {
            get {
                return ResourceManager.GetString("UserPackageDeleteConfirmationIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must choose whether to delete the package or contact support..
        /// </summary>
        public static string UserPackageDeleteDecisionIsRequired {
            get {
                return ResourceManager.GetString("UserPackageDeleteDecisionIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (automated).
        /// </summary>
        public static string UserPackageDeleteSignature {
            get {
                return ResourceManager.GetString("UserPackageDeleteSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This support request is intended for automatic package deletion..
        /// </summary>
        public static string UserPackageDeleteSupportRequestMessage {
            get {
                return ResourceManager.GetString("UserPackageDeleteSupportRequestMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; does not have the rights to upload new versions of package &apos;{1}&apos;..
        /// </summary>
        public static string VerifyPackage_OwnerInvalid {
            get {
                return ResourceManager.GetString("VerifyPackage_OwnerInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User &apos;{0}&apos; is unconfirmed and cannot be the owner of the package..
        /// </summary>
        public static string VerifyPackage_OwnerUnconfirmed {
            get {
                return ResourceManager.GetString("VerifyPackage_OwnerUnconfirmed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your attempt to verify the package submission failed, because the package file appears to have changed. Please try again..
        /// </summary>
        public static string VerifyPackage_PackageFileModified {
            get {
                return ResourceManager.GetString("VerifyPackage_PackageFileModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an unexpected error. Please try uploading the package again..
        /// </summary>
        public static string VerifyPackage_UnexpectedError {
            get {
                return ResourceManager.GetString("VerifyPackage_UnexpectedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your attempt to verify the package submission failed, because we could not find the uploaded package file. Please try again..
        /// </summary>
        public static string VerifyPackage_UploadNotFound {
            get {
                return ResourceManager.GetString("VerifyPackage_UploadNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have permission to upload packages as user &apos;{0}&apos;..
        /// </summary>
        public static string VerifyPackage_UserInvalid {
            get {
                return ResourceManager.GetString("VerifyPackage_UserInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user &apos;{0}&apos; doesn&apos;t exist. You cannot upload a package as a user that doesn&apos;t exist..
        /// </summary>
        public static string VerifyPackage_UserNonExistent {
            get {
                return ResourceManager.GetString("VerifyPackage_UserNonExistent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API &apos;{0}&apos; is deprecated and may be removed in a future version..
        /// </summary>
        public static string WarningApiDeprecated {
            get {
                return ResourceManager.GetString("WarningApiDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your API key expires in {0} days. Visit {1} to regenerate your API key..
        /// </summary>
        public static string WarningApiKeyAboutToExpire {
            get {
                return ResourceManager.GetString("WarningApiKeyAboutToExpire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your API key has expired. Visit {0} to generate a new API key..
        /// </summary>
        public static string WarningApiKeyExpired {
            get {
                return ResourceManager.GetString("WarningApiKeyExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This package will only be available to download with SemVer 2.0.0 compatible NuGet clients, such as Visual Studio 2017 (version 15.3) and above or NuGet client 4.3 and above. For more information, see https://go.microsoft.com/fwlink/?linkid=852248..
        /// </summary>
        public static string WarningSemVer2PackagePushed {
            get {
                return ResourceManager.GetString("WarningSemVer2PackagePushed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
