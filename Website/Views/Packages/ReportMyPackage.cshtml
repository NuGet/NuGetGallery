@using PoliteCaptcha
@model ReportAbuseViewModel
@{
    ViewBag.Tab = "Packages";
}

<h1 class="page-heading">Contact Support About My Package</h1>

<p>Please select the reason for contacting support about your package.</p>

@using (Html.BeginForm())
{
    <fieldset class="form">
        <legend>Contact Support</legend>
        @Html.AntiForgeryToken()
        <div class="form-field">
            @if (!Model.ConfirmedUser)
            {
                @Html.LabelFor(m => m.Email)
                @Html.EditorFor(m => m.Email)
                <span class="field-hint-message">Provide your email address so we can follow up with you.</span>
                @Html.ValidationMessageFor(m => m.Email)
            }
            else
            {
                <input type="hidden" name="Email" value="test@example.com" />
            }
        </div>
        <div class="form-field">
            @Html.LabelFor(m => m.Reason)
            @Html.DropDownListFor(m => m.Reason, Model.ReasonChoices.Select(
                x => new SelectListItem { Value = ReportAbuseViewModel.ReasonDescriptions[x], Text = ReportAbuseViewModel.ReasonDescriptions[x]}))
            @Html.LabelFor(m => m.Message, "Problem")
            <p>In addition to selecting the reason for reporting the package, you <em>must</em> provide details of the problem.</p>
            @Html.TextAreaFor(m => m.Message, 10, 50, null)
            @Html.ValidationMessageFor(m => m.Message)
        </div>
        @Html.SpamPreventionFields()
        <input type="submit" value="Report" title="Report your problem with '@Model.PackageId'" />
    </fieldset>
}

@section BottomScripts {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @Html.SpamPreventionScript()
}