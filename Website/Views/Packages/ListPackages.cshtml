@using NuGetGallery;
@model PackageListViewModel
@{
    ViewBag.Tab = "Packages";
}
<div id="layout-before-main" class="group">
    <section id="currentPageToolbar">
        <div class="zone zone-before-main">
            <form id="search-filter-form" action="@Url.Current()" method="get">
                @* TODO: This hidden input hack can go away when we fully restructure the UI*@
                <input type="hidden" name="q" value="@Model.SearchTerm" />
                <div id="sort">
                    <label>Sort</label>
                    <select name="sortOrder" id="sortOrder">
                        @Html.Option("package-title", "A-Z", Model.SortOrder)
                        @Html.Option("package-download-count", "Popularity", Model.SortOrder)
                        @Html.Option("package-created", "Recent", Model.SortOrder)
                    </select>
                </div>
            </form>
        </div>
    </section>
</div>

<div id="layout-main" class="group">
    <div id="layout-content" class="group">
        @if (TempData.ContainsKey("Message")) {
            <div id="messages">
                <div class="zone zone-messages">
                    <div class="message message-Information">@TempData["Message"]</div>
                </div>
            </div>
        }

        <div id="content" class="group">
            <div class="zone zone-content">
                <section>
                    <header>
                        <h2><span>@Model.TotalCount results for </span>Packages</h2>
                        @if (Model.Items.Count() > 0) {
                            <span class="displayResults">Displaying results @Model.FirstResultIndex - @Model.LastResultIndex.</span>
                        }
                    </header>
                    <ul>
                        @foreach (var listPackage in Model.Items) {
                            <li class="first">
                                @Html.Partial(MVC.Packages.Views._ListPackage, listPackage)
                            </li>
                        }
                    </ul>
                    <div id="pagination">
                        @Html.PreviousNextPager(Model.Pager)
                    </div>
                </section>
            </div>
        </div>
    </div>
</div>
