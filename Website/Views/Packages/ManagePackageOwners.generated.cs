#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NuGetGallery.Views.Packages
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Microsoft.Web.Helpers;
    using NuGetGallery;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "1.2.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Packages/ManagePackageOwners.cshtml")]
    public class ManagePackageOwners : System.Web.Mvc.WebViewPage<ManagePackageOwnersViewModel>
    {
        public ManagePackageOwners()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Views\Packages\ManagePackageOwners.cshtml"
  
    ViewBag.Tab = "Packages";


            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<h1 class=\"page-heading\">Manage Owners for Package ");


            
            #line 7 "..\..\Views\Packages\ManagePackageOwners.cshtml"
                                              Write(Model.Title);

            
            #line default
            #line hidden
WriteLiteral(@"</h1>
<div class=""error message"" data-bind=""text: message, visible: message""></div>

<h2>Current Owners</h2>
<ul id=""package-owner-list"" data-bind=""foreach: owners"">
    <li>
        <span data-bind=""text: name""></span> <em data-bind=""visible: current"">(that&#8217;s you!)</em> 
        <em data-bind=""visible: pending"">(pending approval)</em> 
        <a href=""#"" title=""Remove as owner of ");


            
            #line 15 "..\..\Views\Packages\ManagePackageOwners.cshtml"
                                         Write(Model.Title);

            
            #line default
            #line hidden
WriteLiteral(@""" data-bind=""visible: !current, click: remove"">Remove</a>
    </li>
</ul>

<h2>Add Owner</h2>
<p>
    Enter an owner's username to add them as a package owner.
</p>
 <p class=""message"">
    NOTE: All package owners have full control over their packages,
    including the ability to remove other users as owners.
</p>
");


            
            #line 27 "..\..\Views\Packages\ManagePackageOwners.cshtml"
 using (Html.BeginForm()) {

            
            #line default
            #line hidden
WriteLiteral(@"    <fieldset class=""form"">
        <legend>Add Owner</legend>
        <div class=""form-field"">
            <label for=""newOwnerUserName"">Username</label>
            <input type=""text"" name=""newOwnerUserName"" data-bind=""value: newOwner().name"" />
        </div>
        <input type=""submit"" value=""Add"" title=""Add the user as an owner to ");


            
            #line 34 "..\..\Views\Packages\ManagePackageOwners.cshtml"
                                                                       Write(Model.Title);

            
            #line default
            #line hidden
WriteLiteral("\" data-bind=\"click: addOwner\" />\r\n    </fieldset>\r\n");


            
            #line 36 "..\..\Views\Packages\ManagePackageOwners.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n\r\n");


DefineSection("bottomScripts", () => {

WriteLiteral("\r\n<script src=\"");


            
            #line 41 "..\..\Views\Packages\ManagePackageOwners.cshtml"
        Write(Url.Content("~/Scripts/knockout-latest.js"));

            
            #line default
            #line hidden
WriteLiteral("\"></script>\r\n<script src=\"");


            
            #line 42 "..\..\Views\Packages\ManagePackageOwners.cshtml"
        Write(Url.Content("~/json/JsonApi?json"));

            
            #line default
            #line hidden
WriteLiteral(@"""></script>
<script>
    $(function () {
        //TODO Move this to its own script file when we set up QUnit tests
        var failHandler = function () {
            alert('An unexpected error occurred!');
        };

        var viewModel = {
            package: { id: '");


            
            #line 51 "..\..\Views\Packages\ManagePackageOwners.cshtml"
                       Write(Model.Id);

            
            #line default
            #line hidden
WriteLiteral("\' },\r\n            owners: ko.observableArray([]),\r\n            newOwner: ko.obser" +
"vable(new Owner(null)),\r\n            message: ko.observable(\'\'),\r\n            ad" +
"dOwner: function () {\r\n                var ownerInputModel = viewModel.newOwner(" +
").toJS();\r\n                ownerInputModel.id = viewModel.package.id;\r\n\r\n       " +
"         $mvc.JsonApi.AddPackageOwner(ownerInputModel)\r\n                    .don" +
"e(function (data) {\r\n                        if (data.success) {\r\n              " +
"              viewModel.newOwner().name(data.name);\r\n                           " +
" viewModel.owners.push(viewModel.newOwner());\r\n                            viewM" +
"odel.newOwner(new Owner(null));\r\n                        }\r\n                    " +
"    else {\r\n                            viewModel.message(data.message);\r\n      " +
"                  }\r\n                    })\r\n                    .fail(failHandl" +
"er);\r\n            },\r\n\r\n            removeOwner: function (item) {\r\n            " +
"    var package = viewModel.package;\r\n                $mvc.JsonApi.RemovePackage" +
"Owner({ id: package.id, username: item.name() })\r\n                    .done(func" +
"tion (data) {\r\n                        if (data.success) {\r\n                    " +
"        viewModel.owners.remove(item);\r\n                        }\r\n             " +
"           else {\r\n                            viewModel.message(data.message);\r" +
"\n                        }\r\n                    }).fail(failHandler);\r\n         " +
"   }\r\n        };\r\n        ko.applyBindings(viewModel);\r\n\r\n        // Load initia" +
"l owners.\r\n        $mvc.JsonApi.GetPackageOwners(viewModel.package)\r\n        .do" +
"ne(function (data) {\r\n            viewModel.owners($.map(data, function (item) {" +
" return new Owner(item) }));\r\n        })\r\n        .fail(failHandler);\r\n\r\n       " +
" function Owner(item) {\r\n            var $this = this;\r\n\r\n            item = ite" +
"m || {};\r\n\r\n            this.name = ko.observable(item.name);\r\n            this." +
"pending = item.pending;\r\n            this.current = item.current;\r\n            t" +
"his.remove = function () {\r\n                viewModel.removeOwner(this);\r\n      " +
"      };\r\n            this.toJS = function () {\r\n                return { userna" +
"me: this.name() };\r\n            };\r\n        }\r\n    });\r\n</script>\r\n");


});

WriteLiteral("\r\n\r\n");


        }
    }
}
#pragma warning restore 1591
