@using PoliteCaptcha
@model ReportAbuseViewModel
@{
    ViewBag.Tab = "Packages";
    string returnUrl = ViewData.ContainsKey(Constants.ReturnUrlViewDataKey) ? (string)ViewData[Constants.ReturnUrlViewDataKey] : Request.RawUrl;
}

<h1 class="page-heading">Report Abuse</h1>

<p class="message">
    Important: This form is for reporting <em>abusive</em> packages such as 
    packages containing <em>malicious code</em> or spam. If "@Model.PackageId" simply doesn't 
    appear to work or work correctly, please 
    <a href="@Url.Action(MVC.Packages.ContactOwners(Model.PackageId))" title="contact the owners">contact the owners of "@Model.PackageId".</a> 
</p>

<p>Please provide a detailed abuse report. Include exactly what the package did.</p>

@if (!Model.ConfirmedUser)
{
    <p>Note: if you are the <i>owner</i> of @Model.PackageId, please 
        @Html.ActionLink("log on now before you complete this form.", "LogOn", "Authentication", new { returnUrl = returnUrl }, null)</p>
}

@using (Html.BeginForm())
{
    <fieldset class="form">
        <legend>Report Abuse</legend>
        @Html.AntiForgeryToken()
        <div class="form-field">
            @if (!Model.ConfirmedUser)
            {
                @Html.LabelFor(m => m.Email)
                @Html.EditorFor(m => m.Email)
                <span class="field-hint-message">Provide your email address so we can follow up with you.</span>
                @Html.ValidationMessageFor(m => m.Email)
            }
            else
            {
                <input type="hidden" name="Email" value="test@example.com" />
            }
        </div>
        <div class="form-field">
            @Html.LabelFor(m => m.Reason)
            @Html.DropDownListFor(m => m.Reason, new[]
                {
                    new SelectListItem { Text = "The package contains malicious code", Value = ReportPackageReason.ContainsMaliciousCode.ToString() },
                    new SelectListItem { Text = "The package violates a license I own", Value = ReportPackageReason.ViolatesALicenseIOwn.ToString() },
                    new SelectListItem { Text = "The package owner is fraudulently claiming authorship", Value = ReportPackageReason.IsFraudulent.ToString() },
                    new SelectListItem { Text = "The package has a bug", Value = ReportPackageReason.HasABug.ToString() },
                    new SelectListItem { Text = "Other", Value = ReportPackageReason.Other.ToString() },
                })
            @Html.LabelFor(m => m.AlreadyContactedOwner)
            @Html.CheckBoxFor(m => m.AlreadyContactedOwner) Yes! I have already tried to contact the package owner about this problem. <br/>
            @Html.LabelFor(m => m.Message)
            <p>In addition to selecting the reason for reporting the package, you must provide details of the problem.</p>
            @Html.TextAreaFor(m => m.Message, 10, 50, null)
            @Html.ValidationMessageFor(m => m.Message) <br/>
        </div>
        @Html.SpamPreventionFields()
        <input type="submit" value="Report" title="Report '@Model.PackageId' for abuse" />
    </fieldset>
}

@section BottomScripts {
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    @Html.SpamPreventionScript()
}