name: NuGetGallery CI $(Build.BuildId)

trigger:
  branches:
    include:
      - "*"
  batch: True

variables:
  - name: BuildConfiguration
    value: Release
  - name: Codeql.Enabled
    value: true
  - name: NugetSecurityAnalysisWarningLevel
    value: none
  - name: nugetMultiFeedWarnLevel
    value: none
  - name: CommonPackageVersion
    value: $(CommonAssemblyVersion)-$(NuGetGalleryBranch)-$(Build.BuildId)
  - name: CommonAssemblyVersion
    value: 5.0.0
  - name: GalleryPackageVersion
    value: $(GalleryAssemblyVersion)-$(NuGetGalleryBranch)-$(Build.BuildId)
  - name: GalleryAssemblyVersion
    value: 5.0.0
  - name: JobsPackageVersion
    value: $(JobsAssemblyVersion)-$(NuGetGalleryBranch)-$(Build.BuildId)
  - name: JobsAssemblyVersion
    value: 5.0.0
  - name: NuGetGalleryDirectory
    value: ng
  - name: NuGetGalleryPath
    value: $(Agent.BuildDirectory)\$(NuGetGalleryDirectory)
  - name: NuGetGalleryBranch
    value: $(Build.SourceBranchName)

resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/main
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

extends:
  template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: NuGet-1ES-Hosted-Pool
      image: NuGet-1ESPT-Win2022
      os: windows
    customBuildTags:
      - ES365AIMigrationTooling
    stages:
      - stage: common
        displayName: NuGet.Server.Common.sln
        dependsOn: []
        jobs:
          - job: build_and_test
            displayName: common build and test
            cancelTimeoutInMinutes: 1
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                fetchTags: false
                path: $(NuGetGalleryDirectory)
              - task: PowerShell@1
                name: build
                displayName: Build
                inputs:
                  scriptName: $(NuGetGalleryPath)\build.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipArtifacts -SkipGallery -SkipJobs -CommonAssemblyVersion $(CommonAssemblyVersion) -CommonPackageVersion $(CommonPackageVersion) -GalleryAssemblyVersion $(GalleryAssemblyVersion) -GalleryPackageVersion $(GalleryPackageVersion) -JobsAssemblyVersion $(JobsAssemblyVersion) -JobsPackageVersion $(JobsPackageVersion) -Branch $(NuGetGalleryBranch) -CommitSHA $(Build.SourceVersion)
                  workingFolder: $(NuGetGalleryPath)
              - task: PowerShell@1
                name: test
                displayName: Run tests
                inputs:
                  scriptName: $(NuGetGalleryPath)\test.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipGallery -SkipJobs
                  workingFolder: $(NuGetGalleryPath)
              - task: PublishTestResults@2
                name: publish_test_results
                displayName: Publish test results
                condition: succeededOrFailed()
                inputs:
                  testRunner: VSTest
                  testResultsFiles: $(NuGetGalleryPath)\Results.*.xml
                  failTaskOnFailedTests: true

      - stage: gallery
        displayName: NuGetGallery.sln
        dependsOn: []
        jobs:
          - job: build_and_test
            displayName: gallery build and test
            cancelTimeoutInMinutes: 1
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                fetchTags: false
                path: $(NuGetGalleryDirectory)
              - task: PowerShell@1
                name: build
                displayName: Build
                inputs:
                  scriptName: $(NuGetGalleryPath)\build.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipArtifacts -SkipCommon -SkipJobs -CommonAssemblyVersion $(CommonAssemblyVersion) -CommonPackageVersion $(CommonPackageVersion) -GalleryAssemblyVersion $(GalleryAssemblyVersion) -GalleryPackageVersion $(GalleryPackageVersion) -JobsAssemblyVersion $(JobsAssemblyVersion) -JobsPackageVersion $(JobsPackageVersion) -Branch $(NuGetGalleryBranch) -CommitSHA $(Build.SourceVersion)
                  workingFolder: $(NuGetGalleryPath)
              - task: PowerShell@1
                name: test
                displayName: Run tests
                inputs:
                  scriptName: $(NuGetGalleryPath)\test.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipCommon -SkipJobs
                  workingFolder: $(NuGetGalleryPath)
              - task: PublishTestResults@2
                name: publish_test_results
                displayName: Publish test results
                condition: succeededOrFailed()
                inputs:
                  testRunner: VSTest
                  testResultsFiles: $(NuGetGalleryPath)\Results.*.xml
                  failTaskOnFailedTests: true

      - stage: statslogparser
        displayName: StatsLogPasrser
        dependsOn: []
        jobs:
          - job: build_and_test
            displayName: statslogparser build and test
            cancelTimeoutInMinutes: 1
            variables:
              PIPX_HOME: $(Agent.ToolsDirectory)\pipx
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                fetchTags: false
                path: $(NuGetGalleryDirectory)
              - task: UsePythonVersion@0
                inputs:
                  versionSpec: '3.10'
              - script: |
                  python -m pip install --user pipx
                  pipx ensurepath
                displayName: 'Install tools'
              - script: |
                  pipx install poetry
                  poetry install
                  poetry build
                  poetry run pytest tests/ --cov loginterpretation --cov-report html
                workingDirectory: $(NuGetGalleryPath)\python\StatsLogParser
            templateContext:
              outputs:
                - output: pipelineArtifact
                  path: $(NuGetGalleryPath)\python\StatsLogParser\dist
                  artifact: StatsLogParser

      - stage: jobs
        displayName: NuGet.Jobs.sln
        dependsOn: []
        jobs:
          - job: build_and_test
            displayName: jobs build and test
            cancelTimeoutInMinutes: 1
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                fetchTags: false
                path: $(NuGetGalleryDirectory)
              - task: PowerShell@1
                name: build
                displayName: Build
                inputs:
                  scriptName: $(NuGetGalleryPath)\build.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipArtifacts -SkipCommon -SkipGallery -CommonAssemblyVersion $(CommonAssemblyVersion) -CommonPackageVersion $(CommonPackageVersion) -GalleryAssemblyVersion $(GalleryAssemblyVersion) -GalleryPackageVersion $(GalleryPackageVersion) -JobsAssemblyVersion $(JobsAssemblyVersion) -JobsPackageVersion $(JobsPackageVersion) -Branch $(NuGetGalleryBranch) -CommitSHA $(Build.SourceVersion)
                  workingFolder: $(NuGetGalleryPath)
              - task: PowerShell@1
                name: test
                displayName: Run tests
                inputs:
                  scriptName: $(NuGetGalleryPath)\test.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -SkipCommon -SkipGallery
                  workingFolder: $(NuGetGalleryPath)
              - task: PublishTestResults@2
                name: publish_test_results
                displayName: Publish test results
                condition: succeededOrFailed()
                inputs:
                  testRunner: VSTest
                  testResultsFiles: $(NuGetGalleryPath)\Results.*.xml
                  failTaskOnFailedTests: true

      - stage: artifacts
        displayName: Artifacts
        dependsOn: []
        jobs:
          - job: build_artifacts
            displayName: build
            cancelTimeoutInMinutes: 1
            steps:
              - checkout: self
                fetchDepth: 1
                clean: true
                fetchTags: false
                path: $(NuGetGalleryDirectory)
              - task: PowerShell@1
                name: build_artifacts
                displayName: Build
                inputs:
                  scriptName: $(NuGetGalleryPath)\build.ps1
                  arguments: -Configuration $(BuildConfiguration) -BuildNumber $(Build.BuildId) -CommonAssemblyVersion $(CommonAssemblyVersion) -CommonPackageVersion $(CommonPackageVersion) -GalleryAssemblyVersion $(GalleryAssemblyVersion) -GalleryPackageVersion $(GalleryPackageVersion) -JobsAssemblyVersion $(JobsAssemblyVersion) -JobsPackageVersion $(JobsPackageVersion) -Branch $(NuGetGalleryBranch) -CommitSHA $(Build.SourceVersion)
                  workingFolder: $(NuGetGalleryPath)
